servers:
  post:
    summary: Create a new server
    description: Creates a new server instance using the specified parameters.
    operationId: createNovaServer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/nova_server.yaml#/CreateServerRequest"
    responses:
      200:
        description: nova server
        content:
          application/json:
            schema:
              $ref: "../schemas/nova_server.yaml#/NovaServerResponse"
      4XX:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/4XX"
      default:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/default"

servers_id:
  get:
    summary: Get detailed information about networks
    description: Retrieves a detailed list of networks with their attributes.
    operationId: getNovaServerByID
    parameters:
      - name: id
        in: path
        description: ID of glance image to fetch
        required: true
        schema:
          type: string
    responses:
      200:
        description: neutron network response
        content:
          application/json:
            schema:
              $ref: "../schemas/neutron_network.yaml#/NeutronNetworkResponse"
      4XX:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/4XX"
      default:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/default"

  delete:
    summary: Delete a server by ID
    description: Delete a server by ID
    operationId: deleteNovaServerByID
    parameters:
      - name: id
        in: path
        description: ID of nova server to delete
        required: true
        schema:
          type: string
    responses:
      204:
        description: image deleted
      4XX:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/4XX"
      default:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/default"

servers_id_action:
  post:
    summary: Get detailed information about networks
    description: Retrieves a detailed list of networks with their attributes.
    operationId: actionNovaServer
    parameters:
      - name: id
        in: path
        description: ID of glance image to fetch
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/nova_server.yaml#/ActionServerRequest"
    responses:
      200:
        description: neutron network response
        content:
          application/json:
            schema:
              $ref: "../schemas/neutron_network.yaml#/NeutronNetworkResponse"
      4XX:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/4XX"
      default:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/default"

servers_detail:
  get:
    summary: Get nova servers
    description: Get nova servers
    operationId: getNovaServersDetail
    parameters:
      - name: flavor
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by flavor ID or name.
        example: null
      - name: image
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by image ID or name.
        example: null
      - name: name
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by server name.
        example: null
      - name: project_id
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by project ID.
        example: null
      - name: reservation_id
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by reservation ID.
        example: null
      - name: status
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by server status (e.g., ACTIVE, SHUTOFF).
        example: null
      - name: user_id
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by user ID.
        example: null
      - name: deleted
        in: query
        schema:
          type: boolean
        description: Filter by deleted status. Use `false` to exclude deleted servers.
        example: false
      - name: host
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by host.
        example: null
      - name: ip
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by IPv4 address.
        example: null
      - name: ip6
        in: query
        schema:
          type: string
          nullable: true
        description: Filter by IPv6 address.
        example: null
      - name: changes-since
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter by changes since the specified time (ISO 8601 format).
        example: null
      - name: changes-before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter by changes before the specified time (ISO 8601 format).
        example: null
    responses:
      200:
        description: get nova servers
        content:
          application/json:
            schema:
              $ref: "../schemas/nova_server.yaml#/NovaServersDetailResponse"
      4XX:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/4XX"
      default:
        $ref: "../../../../../libs/openapi_common/schemas/error.yaml#/default"
