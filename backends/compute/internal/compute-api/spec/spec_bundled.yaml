openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Projectstore
  description: A sample API that uses a projectstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://127.0.0.1
security:
  - XAuthTokenHeader: []
paths:
  /glance/v2:
    get:
      security: []
      summary: Get glance version
      description: Get glance version
      operationId: getGlanceVersion
      responses:
        '200':
          description: glance version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceVersionResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /glance/v2/images:
    get:
      summary: Get glance images
      description: Get glance images
      operationId: getGlanceImages
      responses:
        '200':
          description: get glance images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImagesResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    post:
      summary: Create a new glance image
      description: Create a new glance image
      operationId: createGlanceImage
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /glance/v2/images/{id}:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getGlanceImageByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Delete a image by ID
      description: Delete a image by ID
      operationId: deleteGlanceImageByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /glance/v2/images/{id}/file:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getGlanceImageFileByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    put:
      summary: Upload a new glance image
      description: Upload a new glance image
      operationId: uploadGlanceImageFile
      parameters:
        - name: id
          in: path
          description: ID of glance image to upload
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /glance/v2/schemas/image:
    get:
      summary: Get glance images
      description: Get glance images
      operationId: getGlanceSchemasImage
      responses:
        '200':
          description: get glance images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImagesResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1:
    get:
      security: []
      summary: Get nova version
      description: Get nova version
      operationId: getNovaVersion
      responses:
        '200':
          description: nova version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaVersionResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/os-services:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNovaServices
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/servers:
    post:
      summary: Create a new server
      description: Creates a new server instance using the specified parameters.
      operationId: createNovaServer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
      responses:
        '200':
          description: nova server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaServerResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/servers/{id}:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNovaServerByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: neutron network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworkResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Delete a server by ID
      description: Delete a server by ID
      operationId: deleteNovaServerByID
      parameters:
        - name: id
          in: path
          description: ID of nova server to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/servers/detail:
    get:
      summary: Get nova servers
      description: Get nova servers
      operationId: getNovaServersDetail
      parameters:
        - name: flavor
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by flavor ID or name.
          example: null
        - name: image
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by image ID or name.
          example: null
        - name: name
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by server name.
          example: null
        - name: project_id
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by project ID.
          example: null
        - name: reservation_id
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by reservation ID.
          example: null
        - name: status
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by server status (e.g., ACTIVE, SHUTOFF).
          example: null
        - name: user_id
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by user ID.
          example: null
        - name: deleted
          in: query
          schema:
            type: boolean
          description: Filter by deleted status. Use `false` to exclude deleted servers.
          example: false
        - name: host
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by host.
          example: null
        - name: ip
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by IPv4 address.
          example: null
        - name: ip6
          in: query
          schema:
            type: string
            nullable: true
          description: Filter by IPv6 address.
          example: null
        - name: changes-since
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter by changes since the specified time (ISO 8601 format).
          example: null
        - name: changes-before
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter by changes before the specified time (ISO 8601 format).
          example: null
      responses:
        '200':
          description: get nova servers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaServersDetailResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/flavors:
    post:
      summary: Create nova flavors
      description: Create nova flavors
      operationId: createNovaFlavor
      responses:
        '200':
          description: create nova flavors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaFlavorsDetailResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/flavors/detail:
    get:
      summary: Get nova flavors
      description: Get nova flavors
      operationId: getNovaFlavorsDetail
      responses:
        '200':
          description: get nova flavors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaFlavorsDetailResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/flavors/{id}:
    get:
      summary: Get a flavor by ID
      description: Get a flavor by ID
      operationId: getNovaFlavorByID
      parameters:
        - name: id
          in: path
          description: ID of nova flavor to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: nova flavor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaFlavorResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /nova/v2.1/os-server-external-events:
    post:
      summary: Create a new glance image
      description: Create a new glance image
      operationId: createNovaExternalEvents
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0:
    get:
      security: []
      summary: Get neutron version
      description: Get neutron version
      operationId: getNeutronVersion
      responses:
        '200':
          description: neutron version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronVersionResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/networks:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronNetworks
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    post:
      summary: Create detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: createNeutronNetwork
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/networks/{id}:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronNetworkByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: neutron network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworkResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: deleteNeutronNetworkByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/subnets:
    get:
      summary: Get detailed information about subnets
      description: Retrieves a detailed list of subnets with their attributes.
      operationId: getNeutronSubnets
      responses:
        '200':
          description: A detailed list of subnets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronSubnetsResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    post:
      summary: Create detailed information about subnets
      description: Retrieves a detailed list of subnets with their attributes.
      operationId: createNeutronSubnet
      responses:
        '200':
          description: A detailed list of subnets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronSubnetsResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/subnets/{id}:
    get:
      summary: Get detailed information about subnets
      description: Retrieves a detailed list of subnets with their attributes.
      operationId: getNeutronSubnetByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: neutron subnet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronSubnetResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: deleteNeutronSubnetByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/quotas/{project_id}:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronQuotasByProjectID
      parameters:
        - name: project_id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: neutron network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworkResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/agents:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronAgents
      parameters:
        - name: tenant_id
          in: query
          description: ID of glance image to fetch
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be returned
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/ports:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronPorts
      parameters:
        - name: tenant_id
          in: query
          description: ID of glance image to fetch
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to be returned
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    post:
      summary: Create a new glance image
      description: Create a new glance image
      operationId: createNeutronPort
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/ports/{id}:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getNeutronPortByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    put:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: updateNeutronPortByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Delete a image by ID
      description: Delete a image by ID
      operationId: deleteNeutronPortByID
      parameters:
        - name: id
          in: path
          description: ID of glance image to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/security-groups:
    get:
      summary: Get glance images
      description: Get glance images
      operationId: getNeutronSecurityGroups
      responses:
        '200':
          description: get glance images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImagesResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /neutron/v2.0/extensions:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getNeutronExtensions
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement:
    get:
      security: []
      summary: Get placement version
      description: Get placement version
      operationId: getPlacementVersion
      responses:
        '200':
          description: placement version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementVersionResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/:
    get:
      security: []
      summary: Get placement version
      description: Get placement version
      operationId: getPlacementVersion2
      responses:
        '200':
          description: placement version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementVersionResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/traits:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getPlacementTraits
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/resource_providers:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getPlacementResourceProviders
      parameters:
        - name: in_tree
          in: query
          description: ID of glance image to fetch
          schema:
            type: string
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    post:
      summary: Create detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: createPlacementResourceProvider
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/resource_providers/{id}/allocations:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getPlacementResourceProviderAllocations
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/resource_providers/{id}/inventories:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getPlacementResourceProviderInventories
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    put:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: updatePlacementResourceProviderInventory
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/resource_providers/{id}/aggregates:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getPlacementResourceProviderAggregates
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/resource_providers/{id}/traits:
    get:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: getPlacementResourceProviderTraits
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    put:
      summary: Get a image by ID
      description: Get a image by ID
      operationId: updatePlacementResourceProviderTraits
      parameters:
        - name: id
          in: path
          description: ID of glance image to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlanceImageResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/allocations/{id}:
    get:
      summary: Get a allocation by ID
      description: Get a allocation by ID
      operationId: getPlacementAllocationByID
      parameters:
        - name: id
          in: path
          description: ID of glance allocation to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: glance allocation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Delete a allocation by ID
      description: Delete a allocation by ID
      operationId: deletePlacementAllocationByID
      parameters:
        - name: id
          in: path
          description: ID of placement allocation to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: image deleted
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
    put:
      summary: Create a new server
      description: Creates a new server instance using the specified parameters.
      operationId: updatePlacementAllocationByID
      parameters:
        - name: id
          in: path
          description: ID of placement allocation to delete
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerRequest'
      responses:
        '200':
          description: nova server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NovaServerResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
  /placement/allocation_candidates:
    get:
      summary: Get detailed information about networks
      description: Retrieves a detailed list of networks with their attributes.
      operationId: getPlacementAllocationCandidates
      responses:
        '200':
          description: A detailed list of networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeutronNetworksResponse'
        4XX:
          $ref: '#/components/responses/4XX'
        default:
          $ref: '#/components/responses/default'
components:
  securitySchemes:
    XUserIDHeader:
      type: apiKey
      name: x-user-id
      in: header
      description: The custom authorization
    XAuthTokenHeader:
      type: apiKey
      name: x-auth-token
      in: header
      description: The custom authorization
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int
          description: Error code
        message:
          type: string
          description: Error message
    GlanceVersionLink:
      type: object
      properties:
        href:
          type: string
          format: uri
        rel:
          type: string
      required:
        - href
        - rel
    GlanceVersion:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/GlanceVersionLink'
      required:
        - id
        - status
        - links
    GlanceVersionResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/GlanceVersion'
      required:
        - versions
    GlanceImage:
      type: object
      properties:
        owner_specified.openstack.object:
          type: string
        owner_specified.openstack.sha256:
          type: string
        owner_specified.openstack.md5:
          type: string
        name:
          type: string
        disk_format:
          type: string
        container_format:
          type: string
        visibility:
          type: string
          enum:
            - public
            - private
        size:
          type: integer
          format: int64
        virtual_size:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - active
            - saving
            - queued
            - killed
        checksum:
          type: string
        protected:
          type: boolean
        min_ram:
          type: integer
          format: int32
        min_disk:
          type: integer
          format: int32
        owner:
          type: string
        os_hidden:
          type: boolean
        os_hash_algo:
          type: string
        os_hash_value:
          type: string
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        self:
          type: string
          format: uri
        file:
          type: string
          format: uri
        schema:
          type: string
          format: uri
        stores:
          type: string
    GlanceImagesResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/GlanceImage'
        first:
          type: string
          format: uri
        schema:
          type: string
          format: uri
    GlanceImageResponse:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/GlanceImage'
    NovaVersionLink:
      type: object
      properties:
        href:
          type: string
          format: uri
        type:
          type: string
        rel:
          type: string
      required:
        - href
        - type
        - rel
    NovaVersion:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        version:
          type: string
        min_version:
          type: string
        updated:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/NovaVersionLink'
      required:
        - id
        - status
        - version
        - min_version
        - updated
        - links
    NovaVersionResponse:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/NovaVersion'
      required:
        - version
    NeutronNetwork:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2d7aaea9-6719-4e86-9ac5-c731ef0af9ce
        name:
          type: string
          example: local-net
        tenant_id:
          type: string
          example: f11a577948804875b29244e73705cf1a
        admin_state_up:
          type: boolean
          example: true
        mtu:
          type: integer
          example: 1500
        status:
          type: string
          example: ACTIVE
        subnets:
          type: array
          items:
            type: string
          example:
            - d7c13117-2404-41f1-a59a-2db4cf820b18
        shared:
          type: boolean
          example: false
        availability_zone_hints:
          type: array
          items:
            type: string
          example: []
        availability_zones:
          type: array
          items:
            type: string
          example: []
        ipv4_address_scope:
          type: string
          nullable: true
          example: null
        ipv6_address_scope:
          type: string
          nullable: true
          example: null
        router:external:
          type: boolean
          example: false
        description:
          type: string
          example: ''
        tags:
          type: array
          items:
            type: string
          example: []
        created_at:
          type: string
          format: date-time
          example: '2024-12-30T05:40:47Z'
        updated_at:
          type: string
          format: date-time
          example: '2024-12-30T05:40:48Z'
        revision_number:
          type: integer
          example: 2
        project_id:
          type: string
          example: f11a577948804875b29244e73705cf1a
        provider:network_type:
          type: string
          example: local
        provider:physical_network:
          type: string
          nullable: true
          example: null
        provider:segmentation_id:
          type: integer
          nullable: true
          example: null
    NeutronNetworksResponse:
      type: object
      properties:
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NeutronNetwork'
    CreateServerRequest:
      type: object
      properties:
        server:
          type: object
          required:
            - networks
            - min_count
            - flavorRef
            - block_device_mapping_v2
            - name
            - imageRef
            - max_count
          properties:
            networks:
              type: array
              items:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: 2d7aaea9-6719-4e86-9ac5-c731ef0af9ce
            min_count:
              type: integer
              example: 1
            max_count:
              type: integer
              example: 1
            flavorRef:
              type: string
              example: '1'
            block_device_mapping_v2:
              type: array
              items:
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: cc5d35c7-1163-4467-b56d-a8979e1bf2c9
                  boot_index:
                    type: integer
                    example: 0
                  source_type:
                    type: string
                    example: image
                  destination_type:
                    type: string
                    example: local
                  delete_on_termination:
                    type: boolean
                    example: true
            name:
              type: string
              example: testvm
            imageRef:
              type: string
              format: uuid
              example: cc5d35c7-1163-4467-b56d-a8979e1bf2c9
    NovaServerResponse:
      type: object
      properties:
        server:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: 5f16780a-4f57-4720-ba28-ec1ef5345d8b
            links:
              type: array
              items:
                type: object
                properties:
                  rel:
                    type: string
                    example: self
                  href:
                    type: string
                    format: uri
                    example: http://localhost:8774/v2.1/servers/5f16780a-4f57-4720-ba28-ec1ef5345d8b
            OS-DCF:diskConfig:
              type: string
              example: MANUAL
            security_groups:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: default
            adminPass:
              type: string
              example: qcT7eHcJXC5B
    NeutronNetworkResponse:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/NeutronNetwork'
    NovaServersDetailResponse:
      type: object
      properties:
        servers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 5f16780a-4f57-4720-ba28-ec1ef5345d8b
              name:
                type: string
                example: testvm
              status:
                type: string
                example: ERROR
              tenant_id:
                type: string
                example: f11a577948804875b29244e73705cf1a
              user_id:
                type: string
                example: 5ed3c68037ac408eae1caec8f2ff1cf5
              metadata:
                type: object
                additionalProperties:
                  type: string
              hostId:
                type: string
                example: ''
              image:
                type: object
                properties:
                  id:
                    type: string
                    example: cc5d35c7-1163-4467-b56d-a8979e1bf2c9
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        rel:
                          type: string
                          example: bookmark
                        href:
                          type: string
                          format: uri
                          example: http://localhost:8774/images/cc5d35c7-1163-4467-b56d-a8979e1bf2c9
              flavor:
                type: object
                properties:
                  vcpus:
                    type: integer
                    example: 1
                  ram:
                    type: integer
                    example: 512
                  disk:
                    type: integer
                    example: 1
                  ephemeral:
                    type: integer
                    example: 0
                  swap:
                    type: integer
                    example: 0
                  original_name:
                    type: string
                    example: 1v-512M-1G
                  extra_specs:
                    type: object
                    additionalProperties:
                      type: string
              created:
                type: string
                format: date-time
                example: '2025-01-11T08:46:51Z'
              updated:
                type: string
                format: date-time
                example: '2025-01-11T08:46:52Z'
              addresses:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: object
                    properties:
                      addr:
                        type: string
                        example: 192.168.0.1
                      type:
                        type: string
                        example: fixed
              accessIPv4:
                type: string
                example: ''
              accessIPv6:
                type: string
                example: ''
              links:
                type: array
                items:
                  type: object
                  properties:
                    rel:
                      type: string
                      example: self
                    href:
                      type: string
                      format: uri
                      example: http://localhost:8774/v2.1/servers/5f16780a-4f57-4720-ba28-ec1ef5345d8b
              OS-DCF:diskConfig:
                type: string
                example: MANUAL
              OS-EXT-AZ:availability_zone:
                type: string
                example: ''
              pinned_availability_zone:
                type: string
                nullable: true
                example: null
              config_drive:
                type: string
                example: ''
              key_name:
                type: string
                nullable: true
                example: null
              OS-SRV-USG:launched_at:
                type: string
                format: date-time
                nullable: true
                example: null
              OS-SRV-USG:terminated_at:
                type: string
                format: date-time
                nullable: true
                example: null
              OS-EXT-SRV-ATTR:host:
                type: string
                nullable: true
                example: null
              OS-EXT-SRV-ATTR:instance_name:
                type: string
                example: instance-00000001
              OS-EXT-SRV-ATTR:hypervisor_hostname:
                type: string
                nullable: true
                example: null
              OS-EXT-SRV-ATTR:reservation_id:
                type: string
                example: r-k0ptw28a
              OS-EXT-SRV-ATTR:launch_index:
                type: integer
                example: 0
              OS-EXT-SRV-ATTR:hostname:
                type: string
                example: testvm
              OS-EXT-SRV-ATTR:kernel_id:
                type: string
                example: ''
              OS-EXT-SRV-ATTR:ramdisk_id:
                type: string
                example: ''
              OS-EXT-SRV-ATTR:root_device_name:
                type: string
                nullable: true
                example: null
              OS-EXT-SRV-ATTR:user_data:
                type: string
                nullable: true
                example: null
              OS-EXT-STS:task_state:
                type: string
                nullable: true
                example: null
              OS-EXT-STS:vm_state:
                type: string
                example: error
              OS-EXT-STS:power_state:
                type: integer
                example: 0
              os-extended-volumes:volumes_attached:
                type: array
                items:
                  type: object
                example: []
              locked:
                type: boolean
                example: false
              locked_reason:
                type: string
                nullable: true
                example: null
              description:
                type: string
                nullable: true
                example: null
              tags:
                type: array
                items:
                  type: string
                example: []
              trusted_image_certificates:
                type: array
                nullable: true
                items:
                  type: string
                example: null
              host_status:
                type: string
                example: ''
    NovaFlavorDetail:
      type: object
      properties:
        id:
          type: string
          example: '1'
        name:
          type: string
          example: 1v-512M-1G
        ram:
          type: integer
          example: 512
        disk:
          type: integer
          example: 1
        swap:
          type: string
          example: ''
        OS-FLV-EXT-DATA:ephemeral:
          type: integer
          example: 0
        OS-FLV-DISABLED:disabled:
          type: boolean
          example: false
        vcpus:
          type: integer
          example: 1
        os-flavor-access:is_public:
          type: boolean
          example: true
        rxtx_factor:
          type: number
          format: float
          example: 1
        links:
          type: array
          items:
            type: object
            properties:
              rel:
                type: string
                example: self
              href:
                type: string
                format: uri
                example: http://localhost:8774/v2.1/flavors/1
        description:
          type: string
          nullable: true
          example: null
        extra_specs:
          type: object
          additionalProperties:
            type: string
            example: ''
    NovaFlavorsDetailResponse:
      type: object
      properties:
        flavors:
          type: array
          items:
            $ref: '#/components/schemas/NovaFlavorDetail'
    NovaFlavorResponse:
      type: object
      properties:
        flavor:
          $ref: '#/components/schemas/NovaFlavorDetail'
    NeutronVersionLink:
      type: object
      properties:
        href:
          type: string
          format: uri
        rel:
          type: string
      required:
        - href
        - rel
    NeutronVersion:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/NeutronVersionLink'
      required:
        - id
        - status
        - links
    NeutronVersionResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/NeutronVersion'
      required:
        - versions
    NeutronSubnet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 2d7aaea9-6719-4e86-9ac5-c731ef0af9ce
        name:
          type: string
          example: local-net
        tenant_id:
          type: string
          example: f11a577948804875b29244e73705cf1a
        admin_state_up:
          type: boolean
          example: true
        mtu:
          type: integer
          example: 1500
        status:
          type: string
          example: ACTIVE
        subnets:
          type: array
          items:
            type: string
          example:
            - d7c13117-2404-41f1-a59a-2db4cf820b18
        shared:
          type: boolean
          example: false
        availability_zone_hints:
          type: array
          items:
            type: string
          example: []
        availability_zones:
          type: array
          items:
            type: string
          example: []
        ipv4_address_scope:
          type: string
          nullable: true
          example: null
        ipv6_address_scope:
          type: string
          nullable: true
          example: null
        router:external:
          type: boolean
          example: false
        description:
          type: string
          example: ''
        tags:
          type: array
          items:
            type: string
          example: []
        created_at:
          type: string
          format: date-time
          example: '2024-12-30T05:40:47Z'
        updated_at:
          type: string
          format: date-time
          example: '2024-12-30T05:40:48Z'
        revision_number:
          type: integer
          example: 2
        project_id:
          type: string
          example: f11a577948804875b29244e73705cf1a
        provider:network_type:
          type: string
          example: local
        provider:physical_network:
          type: string
          nullable: true
          example: null
        provider:segmentation_id:
          type: integer
          nullable: true
          example: null
    NeutronSubnetsResponse:
      type: object
      properties:
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NeutronSubnet'
    NeutronSubnetResponse:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/NeutronSubnet'
    PlacementVersionLink:
      type: object
      properties:
        href:
          type: string
          format: uri
        rel:
          type: string
      required:
        - href
        - rel
    PlacementVersion:
      type: object
      properties:
        id:
          type: string
        max_version:
          type: string
        min_version:
          type: string
        status:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/PlacementVersionLink'
      required:
        - id
        - max_version
        - min_version
        - status
        - links
    PlacementVersionResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PlacementVersion'
      required:
        - versions
  responses:
    default:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    4XX:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
