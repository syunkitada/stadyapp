openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Projectstore
  description: A sample API that uses a projectstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /v1/projects:
    get:
      summary: Returns all projects
      description: |
        Returns all projects
      operationId: findProjects
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            projects:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: project response
          content:
            application/json:
              schema:
                type: array
                projects:
                  $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Creates a new project
      description: Creates a new project in the store. Duplicates are allowed
      operationId: addProject
      requestBody:
        description: Project to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProject"
      responses:
        "200":
          description: project response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/projects/{id}:
    get:
      summary: Returns a project by ID
      description: Returns a project based on a single ID
      operationId: findProjectByID
      parameters:
        - name: id
          in: path
          description: ID of project to fetch
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: project response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a project by ID
      description: deletes a single project based on the ID supplied
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "204":
          description: project deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/roles:
    get:
      summary: Returns all roles
      description: |
        Returns all roles
      operationId: findRoles
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            roles:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: role response
          content:
            application/json:
              schema:
                type: array
                roles:
                  $ref: "#/components/schemas/Role"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Creates a new role
      description: Creates a new role in the store. Duplicates are allowed
      operationId: addRole
      requestBody:
        description: Role to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRole"
      responses:
        "200":
          description: role response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/roles/{id}:
    get:
      summary: Returns a role by ID
      description: Returns a role based on a single ID
      operationId: findRoleByID
      parameters:
        - name: id
          in: path
          description: ID of role to fetch
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: role response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a role by ID
      description: deletes a single role based on the ID supplied
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          description: ID of role to delete
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "204":
          description: role deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Project:
      allOf:
        - $ref: "#/components/schemas/NewProject"
        - required:
            - id
          properties:
            id:
              type: integer
              format: uint64
              description: Unique id of the project

    NewProject:
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the project
        tag:
          type: string
          description: Type of the project

    Role:
      allOf:
        - $ref: "#/components/schemas/NewRole"
        - required:
            - id
          properties:
            id:
              type: integer
              format: uint64
              description: Unique id of the project

    NewRole:
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the project
        tag:
          type: string
          description: Type of the project

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
