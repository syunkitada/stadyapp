openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Projectstore
  description: A sample API that uses a projectstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://127.0.0.1
security:
  - XUser: []
paths:
  /v1/projects:
    get:
      summary: Returns all projects
      description: |
        Returns all projects
      operationId: findProjects
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a new project
      description: Creates a new project in the store. Duplicates are allowed
      operationId: addProject
      requestBody:
        description: Project to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/projects/{id}:
    get:
      summary: Returns a project by ID
      description: Returns a project based on a single ID
      operationId: findProjectByID
      parameters:
        - name: id
          in: path
          description: ID of project to fetch
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a project by ID
      description: deletes a single project based on the ID supplied
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '204':
          description: project deleted
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/roles:
    get:
      summary: Returns all roles
      description: |
        Returns all roles
      operationId: findRoles
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: role response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a new role
      description: Creates a new role in the store. Duplicates are allowed
      operationId: addRole
      requestBody:
        description: Role to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRole'
      responses:
        '200':
          description: role response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/roles/{id}:
    get:
      summary: Returns a role by ID
      description: Returns a role based on a single ID
      operationId: findRoleByID
      parameters:
        - name: id
          in: path
          description: ID of role to fetch
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: role response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a role by ID
      description: deletes a single role based on the ID supplied
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          description: ID of role to delete
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '204':
          description: role deleted
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v3/auth/tokens:
    post:
      summary: Create a new token
      description: Create a new token
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewToken'
      responses:
        '200':
          description: token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        4XX:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    XUser:
      type: apiKey
      name: x-user-name
      in: header
      description: the custom authorization type
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int
          description: Error code
        message:
          type: string
          description: Error message
    NewProject:
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the project
        tag:
          type: string
          description: Type of the project
    Project:
      allOf:
        - $ref: '#/components/schemas/NewProject'
        - required:
            - id
          properties:
            id:
              type: integer
              format: uint64
              description: Unique id of the project
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    NewRole:
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the role
        tag:
          type: string
          description: Type of the role
    Role:
      allOf:
        - $ref: '#/components/schemas/NewRole'
        - required:
            - id
          properties:
            id:
              type: integer
              format: uint64
              description: Unique id of the role
    Roles:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    NewToken:
      type: object
      properties:
        auth:
          type: object
          properties:
            identity:
              type: object
              properties:
                methods:
                  type: array
                  items:
                    type: string
                token:
                  type: object
                  properties:
                    id:
                      type: string
              required:
                - methods
                - token
            scope:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                      required:
                        - id
                    name:
                      type: string
                  required:
                    - domain
                    - name
          required:
            - identity
            - scope
      required:
        - auth
    Token:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              items:
                type: string
            catalog:
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        interface:
                          type: string
                        region:
                          type: string
                        region_id:
                          type: string
                        url:
                          type: string
                          format: uri
                      required:
                        - id
                        - interface
                        - region
                        - region_id
                        - url
                  type:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                required:
                  - endpoints
                  - type
                  - id
                  - name
            expires_at:
              type: string
              format: date-time
            is_domain:
              type: boolean
            issued_at:
              type: string
              format: date-time
            methods:
              type: array
              items:
                type: string
            project:
              type: object
              properties:
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                id:
                  type: string
                name:
                  type: string
              required:
                - domain
                - id
                - name
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                required:
                  - id
                  - name
            user:
              type: object
              properties:
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                id:
                  type: string
                name:
                  type: string
                password_expires_at:
                  type: string
                  format: date-time
              required:
                - domain
                - id
                - name
                - password_expires_at
          required:
            - audit_ids
            - catalog
            - expires_at
            - is_domain
            - issued_at
            - methods
            - project
            - roles
            - user
      required:
        - token
