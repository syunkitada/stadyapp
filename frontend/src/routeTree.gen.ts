/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutServicesLayoutImport } from './routes/_layout/services/_layout'
import { Route as LayoutServicesLayoutIndexImport } from './routes/_layout/services/_layout/index'
import { Route as LayoutProjectsProjectIdLayoutImport } from './routes/_layout/projects/$projectId/_layout'
import { Route as LayoutServicesLayoutIamIndexImport } from './routes/_layout/services/_layout/iam/index'
import { Route as LayoutServicesLayoutIamProjectsIndexImport } from './routes/_layout/services/_layout/iam/projects/index'
import { Route as LayoutServicesLayoutIamDomainsIndexImport } from './routes/_layout/services/_layout/iam/domains/index'
import { Route as LayoutProjectsProjectIdLayoutComputeIndexImport } from './routes/_layout/projects/$projectId/_layout/compute/index'
import { Route as LayoutProjectsProjectIdLayoutProjectDetailIndexImport } from './routes/_layout/projects/$projectId/_layout/project/detail/index'
import { Route as LayoutProjectsProjectIdLayoutComputeServerIndexImport } from './routes/_layout/projects/$projectId/_layout/compute/server/index'
import { Route as LayoutProjectsProjectIdLayoutComputeServerServerIdIndexImport } from './routes/_layout/projects/$projectId/_layout/compute/server/$serverId/index'
import { Route as LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutImport } from './routes/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout'
import { Route as LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexImport } from './routes/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/index'

// Create Virtual Routes

const LayoutServicesImport = createFileRoute('/_layout/services')()
const LayoutProjectsProjectIdImport = createFileRoute(
  '/_layout/projects/$projectId',
)()
const LayoutProjectsProjectIdLayoutComputeServerServerIdImport =
  createFileRoute(
    '/_layout/projects/$projectId/_layout/compute/server/$serverId',
  )()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutServicesRoute = LayoutServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectsProjectIdRoute = LayoutProjectsProjectIdImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutServicesLayoutRoute = LayoutServicesLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => LayoutServicesRoute,
} as any)

const LayoutServicesLayoutIndexRoute = LayoutServicesLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutServicesLayoutRoute,
} as any)

const LayoutProjectsProjectIdLayoutRoute =
  LayoutProjectsProjectIdLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutProjectsProjectIdRoute,
  } as any)

const LayoutServicesLayoutIamIndexRoute =
  LayoutServicesLayoutIamIndexImport.update({
    id: '/iam/',
    path: '/iam/',
    getParentRoute: () => LayoutServicesLayoutRoute,
  } as any)

const LayoutServicesLayoutIamProjectsIndexRoute =
  LayoutServicesLayoutIamProjectsIndexImport.update({
    id: '/iam/projects/',
    path: '/iam/projects/',
    getParentRoute: () => LayoutServicesLayoutRoute,
  } as any)

const LayoutServicesLayoutIamDomainsIndexRoute =
  LayoutServicesLayoutIamDomainsIndexImport.update({
    id: '/iam/domains/',
    path: '/iam/domains/',
    getParentRoute: () => LayoutServicesLayoutRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeIndexRoute =
  LayoutProjectsProjectIdLayoutComputeIndexImport.update({
    id: '/compute/',
    path: '/compute/',
    getParentRoute: () => LayoutProjectsProjectIdLayoutRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeServerServerIdRoute =
  LayoutProjectsProjectIdLayoutComputeServerServerIdImport.update({
    id: '/compute/server/$serverId',
    path: '/compute/server/$serverId',
    getParentRoute: () => LayoutProjectsProjectIdLayoutRoute,
  } as any)

const LayoutProjectsProjectIdLayoutProjectDetailIndexRoute =
  LayoutProjectsProjectIdLayoutProjectDetailIndexImport.update({
    id: '/project/detail/',
    path: '/project/detail/',
    getParentRoute: () => LayoutProjectsProjectIdLayoutRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeServerIndexRoute =
  LayoutProjectsProjectIdLayoutComputeServerIndexImport.update({
    id: '/compute/server/',
    path: '/compute/server/',
    getParentRoute: () => LayoutProjectsProjectIdLayoutRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute =
  LayoutProjectsProjectIdLayoutComputeServerServerIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      LayoutProjectsProjectIdLayoutComputeServerServerIdRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute =
  LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutImport.update({
    id: '/_laytout',
    getParentRoute: () =>
      LayoutProjectsProjectIdLayoutComputeServerServerIdRoute,
  } as any)

const LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute =
  LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexImport.update({
    id: '/detail/',
    path: '/detail/',
    getParentRoute: () =>
      LayoutProjectsProjectIdLayoutComputeServerServerIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/services': {
      id: '/_layout/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutServicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/services/_layout': {
      id: '/_layout/services/_layout'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutServicesLayoutImport
      parentRoute: typeof LayoutServicesRoute
    }
    '/_layout/projects/$projectId': {
      id: '/_layout/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof LayoutProjectsProjectIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/projects/$projectId/_layout': {
      id: '/_layout/projects/$projectId/_layout'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutImport
      parentRoute: typeof LayoutProjectsProjectIdRoute
    }
    '/_layout/services/_layout/': {
      id: '/_layout/services/_layout/'
      path: '/'
      fullPath: '/services/'
      preLoaderRoute: typeof LayoutServicesLayoutIndexImport
      parentRoute: typeof LayoutServicesLayoutImport
    }
    '/_layout/services/_layout/iam/': {
      id: '/_layout/services/_layout/iam/'
      path: '/iam'
      fullPath: '/services/iam'
      preLoaderRoute: typeof LayoutServicesLayoutIamIndexImport
      parentRoute: typeof LayoutServicesLayoutImport
    }
    '/_layout/projects/$projectId/_layout/compute/': {
      id: '/_layout/projects/$projectId/_layout/compute/'
      path: '/compute'
      fullPath: '/projects/$projectId/compute'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeIndexImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutImport
    }
    '/_layout/services/_layout/iam/domains/': {
      id: '/_layout/services/_layout/iam/domains/'
      path: '/iam/domains'
      fullPath: '/services/iam/domains'
      preLoaderRoute: typeof LayoutServicesLayoutIamDomainsIndexImport
      parentRoute: typeof LayoutServicesLayoutImport
    }
    '/_layout/services/_layout/iam/projects/': {
      id: '/_layout/services/_layout/iam/projects/'
      path: '/iam/projects'
      fullPath: '/services/iam/projects'
      preLoaderRoute: typeof LayoutServicesLayoutIamProjectsIndexImport
      parentRoute: typeof LayoutServicesLayoutImport
    }
    '/_layout/projects/$projectId/_layout/compute/server/': {
      id: '/_layout/projects/$projectId/_layout/compute/server/'
      path: '/compute/server'
      fullPath: '/projects/$projectId/compute/server'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeServerIndexImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutImport
    }
    '/_layout/projects/$projectId/_layout/project/detail/': {
      id: '/_layout/projects/$projectId/_layout/project/detail/'
      path: '/project/detail'
      fullPath: '/projects/$projectId/project/detail'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutProjectDetailIndexImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutImport
    }
    '/_layout/projects/$projectId/_layout/compute/server/$serverId': {
      id: '/_layout/projects/$projectId/_layout/compute/server/$serverId'
      path: '/compute/server/$serverId'
      fullPath: '/projects/$projectId/compute/server/$serverId'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutImport
    }
    '/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout': {
      id: '/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout'
      path: '/compute/server/$serverId'
      fullPath: '/projects/$projectId/compute/server/$serverId'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdRoute
    }
    '/_layout/projects/$projectId/_layout/compute/server/$serverId/': {
      id: '/_layout/projects/$projectId/_layout/compute/server/$serverId/'
      path: '/'
      fullPath: '/projects/$projectId/compute/server/$serverId/'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdIndexImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdImport
    }
    '/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/': {
      id: '/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/'
      path: '/detail'
      fullPath: '/projects/$projectId/compute/server/$serverId/detail'
      preLoaderRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexImport
      parentRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdImport
    }
  }
}

// Create and export the route tree

interface LayoutServicesLayoutRouteChildren {
  LayoutServicesLayoutIndexRoute: typeof LayoutServicesLayoutIndexRoute
  LayoutServicesLayoutIamIndexRoute: typeof LayoutServicesLayoutIamIndexRoute
  LayoutServicesLayoutIamDomainsIndexRoute: typeof LayoutServicesLayoutIamDomainsIndexRoute
  LayoutServicesLayoutIamProjectsIndexRoute: typeof LayoutServicesLayoutIamProjectsIndexRoute
}

const LayoutServicesLayoutRouteChildren: LayoutServicesLayoutRouteChildren = {
  LayoutServicesLayoutIndexRoute: LayoutServicesLayoutIndexRoute,
  LayoutServicesLayoutIamIndexRoute: LayoutServicesLayoutIamIndexRoute,
  LayoutServicesLayoutIamDomainsIndexRoute:
    LayoutServicesLayoutIamDomainsIndexRoute,
  LayoutServicesLayoutIamProjectsIndexRoute:
    LayoutServicesLayoutIamProjectsIndexRoute,
}

const LayoutServicesLayoutRouteWithChildren =
  LayoutServicesLayoutRoute._addFileChildren(LayoutServicesLayoutRouteChildren)

interface LayoutServicesRouteChildren {
  LayoutServicesLayoutRoute: typeof LayoutServicesLayoutRouteWithChildren
}

const LayoutServicesRouteChildren: LayoutServicesRouteChildren = {
  LayoutServicesLayoutRoute: LayoutServicesLayoutRouteWithChildren,
}

const LayoutServicesRouteWithChildren = LayoutServicesRoute._addFileChildren(
  LayoutServicesRouteChildren,
)

interface LayoutProjectsProjectIdLayoutComputeServerServerIdRouteChildren {
  LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute
  LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute
  LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute
}

const LayoutProjectsProjectIdLayoutComputeServerServerIdRouteChildren: LayoutProjectsProjectIdLayoutComputeServerServerIdRouteChildren =
  {
    LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute:
      LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute,
    LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute:
      LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute,
    LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute:
      LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute,
  }

const LayoutProjectsProjectIdLayoutComputeServerServerIdRouteWithChildren =
  LayoutProjectsProjectIdLayoutComputeServerServerIdRoute._addFileChildren(
    LayoutProjectsProjectIdLayoutComputeServerServerIdRouteChildren,
  )

interface LayoutProjectsProjectIdLayoutRouteChildren {
  LayoutProjectsProjectIdLayoutComputeIndexRoute: typeof LayoutProjectsProjectIdLayoutComputeIndexRoute
  LayoutProjectsProjectIdLayoutComputeServerIndexRoute: typeof LayoutProjectsProjectIdLayoutComputeServerIndexRoute
  LayoutProjectsProjectIdLayoutProjectDetailIndexRoute: typeof LayoutProjectsProjectIdLayoutProjectDetailIndexRoute
  LayoutProjectsProjectIdLayoutComputeServerServerIdRoute: typeof LayoutProjectsProjectIdLayoutComputeServerServerIdRouteWithChildren
}

const LayoutProjectsProjectIdLayoutRouteChildren: LayoutProjectsProjectIdLayoutRouteChildren =
  {
    LayoutProjectsProjectIdLayoutComputeIndexRoute:
      LayoutProjectsProjectIdLayoutComputeIndexRoute,
    LayoutProjectsProjectIdLayoutComputeServerIndexRoute:
      LayoutProjectsProjectIdLayoutComputeServerIndexRoute,
    LayoutProjectsProjectIdLayoutProjectDetailIndexRoute:
      LayoutProjectsProjectIdLayoutProjectDetailIndexRoute,
    LayoutProjectsProjectIdLayoutComputeServerServerIdRoute:
      LayoutProjectsProjectIdLayoutComputeServerServerIdRouteWithChildren,
  }

const LayoutProjectsProjectIdLayoutRouteWithChildren =
  LayoutProjectsProjectIdLayoutRoute._addFileChildren(
    LayoutProjectsProjectIdLayoutRouteChildren,
  )

interface LayoutProjectsProjectIdRouteChildren {
  LayoutProjectsProjectIdLayoutRoute: typeof LayoutProjectsProjectIdLayoutRouteWithChildren
}

const LayoutProjectsProjectIdRouteChildren: LayoutProjectsProjectIdRouteChildren =
  {
    LayoutProjectsProjectIdLayoutRoute:
      LayoutProjectsProjectIdLayoutRouteWithChildren,
  }

const LayoutProjectsProjectIdRouteWithChildren =
  LayoutProjectsProjectIdRoute._addFileChildren(
    LayoutProjectsProjectIdRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutServicesRoute: typeof LayoutServicesRouteWithChildren
  LayoutProjectsProjectIdRoute: typeof LayoutProjectsProjectIdRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutServicesRoute: LayoutServicesRouteWithChildren,
  LayoutProjectsProjectIdRoute: LayoutProjectsProjectIdRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/services': typeof LayoutServicesLayoutRouteWithChildren
  '/projects/$projectId': typeof LayoutProjectsProjectIdLayoutRouteWithChildren
  '/services/': typeof LayoutServicesLayoutIndexRoute
  '/services/iam': typeof LayoutServicesLayoutIamIndexRoute
  '/projects/$projectId/compute': typeof LayoutProjectsProjectIdLayoutComputeIndexRoute
  '/services/iam/domains': typeof LayoutServicesLayoutIamDomainsIndexRoute
  '/services/iam/projects': typeof LayoutServicesLayoutIamProjectsIndexRoute
  '/projects/$projectId/compute/server': typeof LayoutProjectsProjectIdLayoutComputeServerIndexRoute
  '/projects/$projectId/project/detail': typeof LayoutProjectsProjectIdLayoutProjectDetailIndexRoute
  '/projects/$projectId/compute/server/$serverId': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute
  '/projects/$projectId/compute/server/$serverId/': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute
  '/projects/$projectId/compute/server/$serverId/detail': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/services': typeof LayoutServicesLayoutIndexRoute
  '/projects/$projectId': typeof LayoutProjectsProjectIdLayoutRouteWithChildren
  '/services/iam': typeof LayoutServicesLayoutIamIndexRoute
  '/projects/$projectId/compute': typeof LayoutProjectsProjectIdLayoutComputeIndexRoute
  '/services/iam/domains': typeof LayoutServicesLayoutIamDomainsIndexRoute
  '/services/iam/projects': typeof LayoutServicesLayoutIamProjectsIndexRoute
  '/projects/$projectId/compute/server': typeof LayoutProjectsProjectIdLayoutComputeServerIndexRoute
  '/projects/$projectId/project/detail': typeof LayoutProjectsProjectIdLayoutProjectDetailIndexRoute
  '/projects/$projectId/compute/server/$serverId': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute
  '/projects/$projectId/compute/server/$serverId/detail': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/services': typeof LayoutServicesRouteWithChildren
  '/_layout/services/_layout': typeof LayoutServicesLayoutRouteWithChildren
  '/_layout/projects/$projectId': typeof LayoutProjectsProjectIdRouteWithChildren
  '/_layout/projects/$projectId/_layout': typeof LayoutProjectsProjectIdLayoutRouteWithChildren
  '/_layout/services/_layout/': typeof LayoutServicesLayoutIndexRoute
  '/_layout/services/_layout/iam/': typeof LayoutServicesLayoutIamIndexRoute
  '/_layout/projects/$projectId/_layout/compute/': typeof LayoutProjectsProjectIdLayoutComputeIndexRoute
  '/_layout/services/_layout/iam/domains/': typeof LayoutServicesLayoutIamDomainsIndexRoute
  '/_layout/services/_layout/iam/projects/': typeof LayoutServicesLayoutIamProjectsIndexRoute
  '/_layout/projects/$projectId/_layout/compute/server/': typeof LayoutProjectsProjectIdLayoutComputeServerIndexRoute
  '/_layout/projects/$projectId/_layout/project/detail/': typeof LayoutProjectsProjectIdLayoutProjectDetailIndexRoute
  '/_layout/projects/$projectId/_layout/compute/server/$serverId': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdRouteWithChildren
  '/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdLaytoutRoute
  '/_layout/projects/$projectId/_layout/compute/server/$serverId/': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdIndexRoute
  '/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/': typeof LayoutProjectsProjectIdLayoutComputeServerServerIdDetailIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/services'
    | '/projects/$projectId'
    | '/services/'
    | '/services/iam'
    | '/projects/$projectId/compute'
    | '/services/iam/domains'
    | '/services/iam/projects'
    | '/projects/$projectId/compute/server'
    | '/projects/$projectId/project/detail'
    | '/projects/$projectId/compute/server/$serverId'
    | '/projects/$projectId/compute/server/$serverId/'
    | '/projects/$projectId/compute/server/$serverId/detail'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/services'
    | '/projects/$projectId'
    | '/services/iam'
    | '/projects/$projectId/compute'
    | '/services/iam/domains'
    | '/services/iam/projects'
    | '/projects/$projectId/compute/server'
    | '/projects/$projectId/project/detail'
    | '/projects/$projectId/compute/server/$serverId'
    | '/projects/$projectId/compute/server/$serverId/detail'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/_layout/services'
    | '/_layout/services/_layout'
    | '/_layout/projects/$projectId'
    | '/_layout/projects/$projectId/_layout'
    | '/_layout/services/_layout/'
    | '/_layout/services/_layout/iam/'
    | '/_layout/projects/$projectId/_layout/compute/'
    | '/_layout/services/_layout/iam/domains/'
    | '/_layout/services/_layout/iam/projects/'
    | '/_layout/projects/$projectId/_layout/compute/server/'
    | '/_layout/projects/$projectId/_layout/project/detail/'
    | '/_layout/projects/$projectId/_layout/compute/server/$serverId'
    | '/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout'
    | '/_layout/projects/$projectId/_layout/compute/server/$serverId/'
    | '/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/services",
        "/_layout/projects/$projectId"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/services": {
      "filePath": "_layout/services",
      "parent": "/_layout",
      "children": [
        "/_layout/services/_layout"
      ]
    },
    "/_layout/services/_layout": {
      "filePath": "_layout/services/_layout.tsx",
      "parent": "/_layout/services",
      "children": [
        "/_layout/services/_layout/",
        "/_layout/services/_layout/iam/",
        "/_layout/services/_layout/iam/domains/",
        "/_layout/services/_layout/iam/projects/"
      ]
    },
    "/_layout/projects/$projectId": {
      "filePath": "_layout/projects/$projectId",
      "parent": "/_layout",
      "children": [
        "/_layout/projects/$projectId/_layout"
      ]
    },
    "/_layout/projects/$projectId/_layout": {
      "filePath": "_layout/projects/$projectId/_layout.tsx",
      "parent": "/_layout/projects/$projectId",
      "children": [
        "/_layout/projects/$projectId/_layout/compute/",
        "/_layout/projects/$projectId/_layout/compute/server/",
        "/_layout/projects/$projectId/_layout/project/detail/",
        "/_layout/projects/$projectId/_layout/compute/server/$serverId"
      ]
    },
    "/_layout/services/_layout/": {
      "filePath": "_layout/services/_layout/index.tsx",
      "parent": "/_layout/services/_layout"
    },
    "/_layout/services/_layout/iam/": {
      "filePath": "_layout/services/_layout/iam/index.tsx",
      "parent": "/_layout/services/_layout"
    },
    "/_layout/projects/$projectId/_layout/compute/": {
      "filePath": "_layout/projects/$projectId/_layout/compute/index.tsx",
      "parent": "/_layout/projects/$projectId/_layout"
    },
    "/_layout/services/_layout/iam/domains/": {
      "filePath": "_layout/services/_layout/iam/domains/index.tsx",
      "parent": "/_layout/services/_layout"
    },
    "/_layout/services/_layout/iam/projects/": {
      "filePath": "_layout/services/_layout/iam/projects/index.tsx",
      "parent": "/_layout/services/_layout"
    },
    "/_layout/projects/$projectId/_layout/compute/server/": {
      "filePath": "_layout/projects/$projectId/_layout/compute/server/index.tsx",
      "parent": "/_layout/projects/$projectId/_layout"
    },
    "/_layout/projects/$projectId/_layout/project/detail/": {
      "filePath": "_layout/projects/$projectId/_layout/project/detail/index.tsx",
      "parent": "/_layout/projects/$projectId/_layout"
    },
    "/_layout/projects/$projectId/_layout/compute/server/$serverId": {
      "filePath": "_layout/projects/$projectId/_layout/compute/server/$serverId",
      "parent": "/_layout/projects/$projectId/_layout",
      "children": [
        "/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout",
        "/_layout/projects/$projectId/_layout/compute/server/$serverId/",
        "/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/"
      ]
    },
    "/_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout": {
      "filePath": "_layout/projects/$projectId/_layout/compute/server/$serverId/_laytout.tsx",
      "parent": "/_layout/projects/$projectId/_layout/compute/server/$serverId"
    },
    "/_layout/projects/$projectId/_layout/compute/server/$serverId/": {
      "filePath": "_layout/projects/$projectId/_layout/compute/server/$serverId/index.tsx",
      "parent": "/_layout/projects/$projectId/_layout/compute/server/$serverId"
    },
    "/_layout/projects/$projectId/_layout/compute/server/$serverId/detail/": {
      "filePath": "_layout/projects/$projectId/_layout/compute/server/$serverId/detail/index.tsx",
      "parent": "/_layout/projects/$projectId/_layout/compute/server/$serverId"
    }
  }
}
ROUTE_MANIFEST_END */
