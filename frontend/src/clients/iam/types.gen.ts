// This file is auto-generated by @hey-api/openapi-ts

export type _Error = {
    /**
     * Error code
     */
    code: number;
    /**
     * Error message
     */
    message: string;
};

export type User = {
    id: string;
    name: string;
};

export type KeystoneSelfPagerLinks = {
    self: string;
};

export type KeystoneProject = {
    id: string;
    name: string;
    domain_id: string;
    description: string;
    enabled: boolean;
    parent_id: string;
    is_domain: boolean;
    links: KeystoneSelfPagerLinks;
    [key: string]: unknown | string | boolean | KeystoneSelfPagerLinks;
};

export type Endpoint = {
    id: string;
    interface: string;
    region: string;
    url: string;
};

export type Catalog = {
    [key: string]: Endpoint;
};

export type WebUser = {
    user: User;
    projects: Array<KeystoneProject>;
    catalog: Catalog;
};

export type Pubkey = {
    key: string;
};

export type Pubkeys = {
    pubkeys: Array<Pubkey>;
};

export type KeystoneVersionLink = {
    href: string;
    rel: string;
};

export type KeystoneVersionMediaType = {
    base: string;
    type: string;
};

export type KeystoneVersionData = {
    id: string;
    status: string;
    updated: string;
    links: Array<KeystoneVersionLink>;
    'media-types': Array<KeystoneVersionMediaType>;
};

export type KeystoneVersion = {
    version: KeystoneVersionData;
};

export type CreateKeystoneTokenInputAuthIdentity = {
    methods: Array<string>;
    token: {
        id?: string;
    };
};

export type CreateKeystoneTokenInputAuthScopeProject = {
    domain?: {
        id?: string;
    };
    id?: string;
    name?: string;
};

export type CreateKeystoneTokenInputAuthScope = {
    project?: CreateKeystoneTokenInputAuthScopeProject;
};

export type CreateKeystoneTokenInputAuth = {
    identity: CreateKeystoneTokenInputAuthIdentity;
    scope?: CreateKeystoneTokenInputAuthScope;
};

export type CreateKeystoneTokenInput = {
    auth: CreateKeystoneTokenInputAuth;
};

export type KeystoneEndpoint = {
    id: string;
    interface: string;
    region: string;
    region_id: string;
    url: string;
};

export type KeystoneCatalog = {
    endpoints: Array<KeystoneEndpoint>;
    type: string;
    id: string;
    name: string;
};

export type KeystoneTokenDomain = {
    id: string;
    name: string;
};

export type KeystoneTokenProject = {
    domain: KeystoneTokenDomain;
    id: string;
    name: string;
};

export type KeystoneTokenRole = {
    id: string;
    name: string;
};

export type KeystoneTokenUser = {
    domain: KeystoneTokenDomain;
    id: string;
    name: string;
    password_expires_at: string;
};

export type KeystoneToken = {
    audit_ids: Array<string>;
    catalog: Array<KeystoneCatalog>;
    expires_at: string;
    is_domain: boolean;
    issued_at: string;
    methods: Array<string>;
    project?: KeystoneTokenProject;
    roles: Array<KeystoneTokenRole>;
    user: KeystoneTokenUser;
};

export type KeystoneTokenResponse = {
    token: KeystoneToken;
};

export type KeystoneDomain = {
    id: string;
    name: string;
    description: string;
    enabled: boolean;
    links: KeystoneSelfPagerLinks;
    [key: string]: unknown | string | boolean | KeystoneSelfPagerLinks;
};

export type KeystonePagerLinks = {
    next?: string | null;
    self: string;
    previous?: string | null;
};

export type KeystoneDomainsResponse = {
    domains: Array<KeystoneDomain>;
    links: KeystonePagerLinks;
};

export type CreateKeystoneDomainInput = {
    domain: {
        name: string;
        description?: string;
        enabled: boolean;
        [key: string]: unknown | string | boolean | undefined;
    };
};

export type KeystoneDomainResponse = {
    domain: KeystoneDomain;
};

export type UpdateKeystoneDomainInput = {
    domain: {
        name?: string;
        description?: string;
        enabled?: boolean;
        [key: string]: unknown | string | boolean | undefined;
    };
};

export type KeystoneProjectsResponse = {
    projects: Array<KeystoneProject>;
    links: KeystonePagerLinks;
};

export type CreateKeystoneProjectInput = {
    project: {
        domain_id: string;
        name: string;
        description?: string;
        enabled: boolean;
        tags?: Array<string>;
        organization_id?: string;
        [key: string]: unknown | string | boolean | Array<string> | undefined;
    };
};

export type KeystoneProjectResponse = {
    project: KeystoneProject;
};

export type UpdateKeystoneProjectInput = {
    project: {
        domain_id?: string;
        name?: string;
        description?: string;
        enabled?: boolean;
        tags?: Array<string>;
        [key: string]: unknown | string | boolean | Array<string> | undefined;
    };
};

export type KeystoneUser = {
    id: string;
    name: string;
    domain_id: string;
    enabled: boolean;
    password_expires_at: string | null;
    options: {};
    links: KeystoneSelfPagerLinks;
};

export type KeystoneUsers = {
    users: Array<KeystoneUser>;
    links: KeystonePagerLinks;
};

export type CreateKeystoneUserInput = {
    user: {
        default_project_id: string;
        enabled: boolean;
        domain_id: string;
        name: string;
        password: string;
    };
};

export type KeystoneUserResponse = {
    user: KeystoneUser;
};

export type KeystoneGroup = {
    id: string;
    name: string;
    domain_id: string;
    enabled: boolean;
    password_expires_at: string | null;
    options: {};
    links: KeystoneSelfPagerLinks;
};

export type KeystoneGroupsResponse = {
    groups: Array<KeystoneGroup>;
    links: KeystonePagerLinks;
};

export type KeystoneGroupResponse = {
    group: KeystoneGroup;
};

export type KeystoneRole = {
    id: string;
    name: string;
    description: string;
    links: KeystoneSelfPagerLinks;
    [key: string]: unknown | string | KeystoneSelfPagerLinks;
};

export type KeystoneRolesResponse = {
    roles: Array<KeystoneRole>;
    links: KeystonePagerLinks;
};

export type CreateKeystoneRoleInput = {
    role: {
        name: string;
        description?: string;
        [key: string]: unknown | string | undefined;
    };
};

export type KeystoneRoleResponse = {
    role: KeystoneRole;
};

export type UpdateKeystoneRoleInput = {
    role: {
        name?: string;
        description?: string;
        [key: string]: unknown | string | undefined;
    };
};

export type KeystoneRoleAssignmentProject = {
    id: string;
    name: string;
    domain: {
        id: string;
        name: string;
    };
};

export type KeystoneRoleAssignmentDomain = {
    id: string;
    name: string;
};

export type KeystoneRoleAssignmentScope = {
    project?: KeystoneRoleAssignmentProject;
    domain?: KeystoneRoleAssignmentDomain;
};

export type KeystoneRoleAssignmentGroup = {
    id: string;
    name: string;
    domain: {
        id: string;
        name: string;
    };
};

export type KeystoneRoleAssignmentUser = {
    id: string;
    name: string;
    domain: {
        id: string;
        name: string;
    };
};

export type KeystoneRoleAssignmentRole = {
    id: string;
    name: string;
};

export type KeystoneRoleAssignment = {
    scope?: KeystoneRoleAssignmentScope;
    group?: KeystoneRoleAssignmentGroup;
    user?: KeystoneRoleAssignmentUser;
    role?: KeystoneRoleAssignmentRole;
    links?: KeystoneSelfPagerLinks;
};

export type KeystoneRoleAssignmentsResponse = {
    role_assignments: Array<KeystoneRoleAssignment>;
    links: KeystonePagerLinks;
};

export type CreateKeystoneApplicationCredentialInput = {
    application_credential: {
        roles?: Array<string>;
        name: string;
        unrestricted?: boolean;
        secret?: string | null;
        expires_at?: string | null;
        access_rules?: Array<{
            [key: string]: unknown;
        }>;
        description?: string | null;
    };
};

export type KeystoneApplicationCredential = {
    id: string;
    name: string;
    description?: string;
    roles: Array<KeystoneTokenRole>;
    access_rules?: Array<{
        path?: string;
        id?: string;
        service?: string;
        method?: string;
    }>;
    links?: {
        self?: string;
    };
    expires_at: string;
    unrestricted?: boolean;
    secret: string;
    project_id: string;
};

export type KeystoneApplicationCredentialResponse = {
    application_credential: KeystoneApplicationCredential;
};

export type GetWebUserData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * project id
         */
        project_id?: string;
    };
    url: '/v1/web/user';
};

export type GetWebUserErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetWebUserError = GetWebUserErrors[keyof GetWebUserErrors];

export type GetWebUserResponses = {
    /**
     * public key
     */
    200: WebUser;
};

export type GetWebUserResponse = GetWebUserResponses[keyof GetWebUserResponses];

export type GetPubkeysData = {
    body?: never;
    path?: never;
    query: {
        /**
         * kind of public key
         */
        kind: string;
    };
    url: '/v1/pubkeys';
};

export type GetPubkeysErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPubkeysError = GetPubkeysErrors[keyof GetPubkeysErrors];

export type GetPubkeysResponses = {
    /**
     * public key
     */
    200: Pubkeys;
};

export type GetPubkeysResponse = GetPubkeysResponses[keyof GetPubkeysResponses];

export type GetKeystoneVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/keystone/v3';
};

export type GetKeystoneVersionErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneVersionError = GetKeystoneVersionErrors[keyof GetKeystoneVersionErrors];

export type GetKeystoneVersionResponses = {
    /**
     * keystone version
     */
    200: KeystoneVersion;
};

export type GetKeystoneVersionResponse = GetKeystoneVersionResponses[keyof GetKeystoneVersionResponses];

export type CreateKeystoneTokenData = {
    body: CreateKeystoneTokenInput;
    path?: never;
    query?: never;
    url: '/keystone/v3/auth/tokens';
};

export type CreateKeystoneTokenErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneTokenError = CreateKeystoneTokenErrors[keyof CreateKeystoneTokenErrors];

export type CreateKeystoneTokenResponses = {
    /**
     * token response
     */
    200: KeystoneTokenResponse;
};

export type CreateKeystoneTokenResponse = CreateKeystoneTokenResponses[keyof CreateKeystoneTokenResponses];

export type CreateKeystoneFederationAuthTokenData = {
    body?: never;
    path: {
        /**
         * provider for federation
         */
        provider: string;
        /**
         * protocol for federation
         */
        protocol: string;
    };
    query?: never;
    url: '/keystone/v3/OS-FEDERATION/identity_providers/{provider}/protocols/{protocol}/auth';
};

export type CreateKeystoneFederationAuthTokenErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneFederationAuthTokenError = CreateKeystoneFederationAuthTokenErrors[keyof CreateKeystoneFederationAuthTokenErrors];

export type CreateKeystoneFederationAuthTokenResponses = {
    /**
     * token response
     */
    200: KeystoneTokenResponse;
};

export type CreateKeystoneFederationAuthTokenResponse = CreateKeystoneFederationAuthTokenResponses[keyof CreateKeystoneFederationAuthTokenResponses];

export type GetKeystoneDomainsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a domain name
         */
        name?: string;
    };
    url: '/keystone/v3/domains';
};

export type GetKeystoneDomainsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneDomainsError = GetKeystoneDomainsErrors[keyof GetKeystoneDomainsErrors];

export type GetKeystoneDomainsResponses = {
    /**
     * get keystone domains
     */
    200: KeystoneDomainsResponse;
};

export type GetKeystoneDomainsResponse = GetKeystoneDomainsResponses[keyof GetKeystoneDomainsResponses];

export type CreateKeystoneDomainData = {
    body: CreateKeystoneDomainInput;
    path?: never;
    query?: never;
    url: '/keystone/v3/domains';
};

export type CreateKeystoneDomainErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneDomainError = CreateKeystoneDomainErrors[keyof CreateKeystoneDomainErrors];

export type CreateKeystoneDomainResponses = {
    /**
     * keystone domain response
     */
    200: KeystoneDomainResponse;
};

export type CreateKeystoneDomainResponse = CreateKeystoneDomainResponses[keyof CreateKeystoneDomainResponses];

export type DeleteKeystoneDomainByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone domain to delete
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/domains/{id}';
};

export type DeleteKeystoneDomainByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteKeystoneDomainByIdError = DeleteKeystoneDomainByIdErrors[keyof DeleteKeystoneDomainByIdErrors];

export type DeleteKeystoneDomainByIdResponses = {
    /**
     * domain deleted
     */
    204: void;
};

export type DeleteKeystoneDomainByIdResponse = DeleteKeystoneDomainByIdResponses[keyof DeleteKeystoneDomainByIdResponses];

export type GetKeystoneDomainByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone domain to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/domains/{id}';
};

export type GetKeystoneDomainByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneDomainByIdError = GetKeystoneDomainByIdErrors[keyof GetKeystoneDomainByIdErrors];

export type GetKeystoneDomainByIdResponses = {
    /**
     * keystone domain response
     */
    200: KeystoneDomainResponse;
};

export type GetKeystoneDomainByIdResponse = GetKeystoneDomainByIdResponses[keyof GetKeystoneDomainByIdResponses];

export type UpdateKeystoneDomainByIdData = {
    body: UpdateKeystoneDomainInput;
    path: {
        /**
         * ID of keystone domain to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/domains/{id}';
};

export type UpdateKeystoneDomainByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdateKeystoneDomainByIdError = UpdateKeystoneDomainByIdErrors[keyof UpdateKeystoneDomainByIdErrors];

export type UpdateKeystoneDomainByIdResponses = {
    /**
     * keystone domain response
     */
    200: KeystoneDomainResponse;
};

export type UpdateKeystoneDomainByIdResponse = UpdateKeystoneDomainByIdResponses[keyof UpdateKeystoneDomainByIdResponses];

export type UnassignKeystoneRoleFromUserDomainData = {
    body?: never;
    path: {
        /**
         * ID of keystone domain to fetch
         */
        id: string;
        /**
         * ID of keystone user to fetch
         */
        user_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/domains/{id}/users/{user_id}/roles/{role_id}';
};

export type UnassignKeystoneRoleFromUserDomainErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UnassignKeystoneRoleFromUserDomainError = UnassignKeystoneRoleFromUserDomainErrors[keyof UnassignKeystoneRoleFromUserDomainErrors];

export type UnassignKeystoneRoleFromUserDomainResponses = {
    /**
     * role unassigned from a user on a domain
     */
    204: void;
};

export type UnassignKeystoneRoleFromUserDomainResponse = UnassignKeystoneRoleFromUserDomainResponses[keyof UnassignKeystoneRoleFromUserDomainResponses];

export type AssignKeystoneRoleToUserDomainData = {
    body?: never;
    path: {
        /**
         * ID of keystone domain to fetch
         */
        id: string;
        /**
         * ID of keystone user to fetch
         */
        user_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/domains/{id}/users/{user_id}/roles/{role_id}';
};

export type AssignKeystoneRoleToUserDomainErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type AssignKeystoneRoleToUserDomainError = AssignKeystoneRoleToUserDomainErrors[keyof AssignKeystoneRoleToUserDomainErrors];

export type AssignKeystoneRoleToUserDomainResponses = {
    /**
     * role assigned to a user on a domain
     */
    204: void;
};

export type AssignKeystoneRoleToUserDomainResponse = AssignKeystoneRoleToUserDomainResponses[keyof AssignKeystoneRoleToUserDomainResponses];

export type GetKeystoneProjectsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a project name
         */
        name?: string;
        /**
         * Filters the response by tags
         */
        tags?: Array<string>;
    };
    url: '/keystone/v3/projects';
};

export type GetKeystoneProjectsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneProjectsError = GetKeystoneProjectsErrors[keyof GetKeystoneProjectsErrors];

export type GetKeystoneProjectsResponses = {
    /**
     * get keystone projects
     */
    200: KeystoneProjectsResponse;
};

export type GetKeystoneProjectsResponse = GetKeystoneProjectsResponses[keyof GetKeystoneProjectsResponses];

export type CreateKeystoneProjectData = {
    body: CreateKeystoneProjectInput;
    path?: never;
    query?: never;
    url: '/keystone/v3/projects';
};

export type CreateKeystoneProjectErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneProjectError = CreateKeystoneProjectErrors[keyof CreateKeystoneProjectErrors];

export type CreateKeystoneProjectResponses = {
    /**
     * keystone project response
     */
    200: KeystoneProjectResponse;
};

export type CreateKeystoneProjectResponse = CreateKeystoneProjectResponses[keyof CreateKeystoneProjectResponses];

export type DeleteKeystoneProjectByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to delete
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}';
};

export type DeleteKeystoneProjectByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteKeystoneProjectByIdError = DeleteKeystoneProjectByIdErrors[keyof DeleteKeystoneProjectByIdErrors];

export type DeleteKeystoneProjectByIdResponses = {
    /**
     * project deleted
     */
    204: void;
};

export type DeleteKeystoneProjectByIdResponse = DeleteKeystoneProjectByIdResponses[keyof DeleteKeystoneProjectByIdResponses];

export type GetKeystoneProjectByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}';
};

export type GetKeystoneProjectByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneProjectByIdError = GetKeystoneProjectByIdErrors[keyof GetKeystoneProjectByIdErrors];

export type GetKeystoneProjectByIdResponses = {
    /**
     * keystone project response
     */
    200: KeystoneProjectResponse;
};

export type GetKeystoneProjectByIdResponse = GetKeystoneProjectByIdResponses[keyof GetKeystoneProjectByIdResponses];

export type UpdateKeystoneProjectByIdData = {
    body: UpdateKeystoneProjectInput;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}';
};

export type UpdateKeystoneProjectByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdateKeystoneProjectByIdError = UpdateKeystoneProjectByIdErrors[keyof UpdateKeystoneProjectByIdErrors];

export type UpdateKeystoneProjectByIdResponses = {
    /**
     * keystone project response
     */
    200: KeystoneProjectResponse;
};

export type UpdateKeystoneProjectByIdResponse = UpdateKeystoneProjectByIdResponses[keyof UpdateKeystoneProjectByIdResponses];

export type UnassignKeystoneRoleFromUserProjectData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
        /**
         * ID of keystone user to fetch
         */
        user_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}/users/{user_id}/roles/{role_id}';
};

export type UnassignKeystoneRoleFromUserProjectErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UnassignKeystoneRoleFromUserProjectError = UnassignKeystoneRoleFromUserProjectErrors[keyof UnassignKeystoneRoleFromUserProjectErrors];

export type UnassignKeystoneRoleFromUserProjectResponses = {
    /**
     * role unassigned from a user on a project
     */
    204: void;
};

export type UnassignKeystoneRoleFromUserProjectResponse = UnassignKeystoneRoleFromUserProjectResponses[keyof UnassignKeystoneRoleFromUserProjectResponses];

export type AssignKeystoneRoleToUserProjectData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
        /**
         * ID of keystone user to fetch
         */
        user_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}/users/{user_id}/roles/{role_id}';
};

export type AssignKeystoneRoleToUserProjectErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type AssignKeystoneRoleToUserProjectError = AssignKeystoneRoleToUserProjectErrors[keyof AssignKeystoneRoleToUserProjectErrors];

export type AssignKeystoneRoleToUserProjectResponses = {
    /**
     * role assigned to a user on a project
     */
    204: void;
};

export type AssignKeystoneRoleToUserProjectResponse = AssignKeystoneRoleToUserProjectResponses[keyof AssignKeystoneRoleToUserProjectResponses];

export type UnassignKeystoneRoleFromGroupProjectData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
        /**
         * ID of keystone group to fetch
         */
        group_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}/groups/{group_id}/roles/{role_id}';
};

export type UnassignKeystoneRoleFromGroupProjectErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UnassignKeystoneRoleFromGroupProjectError = UnassignKeystoneRoleFromGroupProjectErrors[keyof UnassignKeystoneRoleFromGroupProjectErrors];

export type UnassignKeystoneRoleFromGroupProjectResponses = {
    /**
     * role unassigned from a group on a project
     */
    204: void;
};

export type UnassignKeystoneRoleFromGroupProjectResponse = UnassignKeystoneRoleFromGroupProjectResponses[keyof UnassignKeystoneRoleFromGroupProjectResponses];

export type AssignKeystoneRoleToGroupProjectData = {
    body?: never;
    path: {
        /**
         * ID of keystone project to fetch
         */
        id: string;
        /**
         * ID of keystone group to fetch
         */
        group_id: string;
        /**
         * ID of keystone role to fetch
         */
        role_id: string;
    };
    query?: never;
    url: '/keystone/v3/projects/{id}/groups/{group_id}/roles/{role_id}';
};

export type AssignKeystoneRoleToGroupProjectErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type AssignKeystoneRoleToGroupProjectError = AssignKeystoneRoleToGroupProjectErrors[keyof AssignKeystoneRoleToGroupProjectErrors];

export type AssignKeystoneRoleToGroupProjectResponses = {
    /**
     * role assigned to a group on a project
     */
    204: void;
};

export type AssignKeystoneRoleToGroupProjectResponse = AssignKeystoneRoleToGroupProjectResponses[keyof AssignKeystoneRoleToGroupProjectResponses];

export type GetKeystoneUsersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a user name
         */
        name?: string;
    };
    url: '/keystone/v3/users';
};

export type GetKeystoneUsersErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneUsersError = GetKeystoneUsersErrors[keyof GetKeystoneUsersErrors];

export type GetKeystoneUsersResponses = {
    /**
     * get keystone users
     */
    200: KeystoneUsers;
};

export type GetKeystoneUsersResponse = GetKeystoneUsersResponses[keyof GetKeystoneUsersResponses];

export type CreateKeystoneUserData = {
    body: CreateKeystoneUserInput;
    path?: never;
    query?: never;
    url: '/keystone/v3/users';
};

export type CreateKeystoneUserErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneUserError = CreateKeystoneUserErrors[keyof CreateKeystoneUserErrors];

export type CreateKeystoneUserResponses = {
    /**
     * keystone user response
     */
    200: KeystoneUser;
};

export type CreateKeystoneUserResponse = CreateKeystoneUserResponses[keyof CreateKeystoneUserResponses];

export type DeleteKeystoneUserByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone user to delete
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/users/{id}';
};

export type DeleteKeystoneUserByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteKeystoneUserByIdError = DeleteKeystoneUserByIdErrors[keyof DeleteKeystoneUserByIdErrors];

export type DeleteKeystoneUserByIdResponses = {
    /**
     * user deleted
     */
    204: void;
};

export type DeleteKeystoneUserByIdResponse = DeleteKeystoneUserByIdResponses[keyof DeleteKeystoneUserByIdResponses];

export type GetKeystoneUserByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone user to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/users/{id}';
};

export type GetKeystoneUserByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneUserByIdError = GetKeystoneUserByIdErrors[keyof GetKeystoneUserByIdErrors];

export type GetKeystoneUserByIdResponses = {
    /**
     * keystone user response
     */
    200: KeystoneUser;
};

export type GetKeystoneUserByIdResponse = GetKeystoneUserByIdResponses[keyof GetKeystoneUserByIdResponses];

export type GetKeystoneUserProjectsByUserIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone user to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/users/{id}/projects';
};

export type GetKeystoneUserProjectsByUserIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneUserProjectsByUserIdError = GetKeystoneUserProjectsByUserIdErrors[keyof GetKeystoneUserProjectsByUserIdErrors];

export type GetKeystoneUserProjectsByUserIdResponses = {
    /**
     * keystone user response
     */
    200: KeystoneUserResponse;
};

export type GetKeystoneUserProjectsByUserIdResponse = GetKeystoneUserProjectsByUserIdResponses[keyof GetKeystoneUserProjectsByUserIdResponses];

export type GetKeystoneGroupsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a group name
         */
        name?: string;
    };
    url: '/keystone/v3/groups';
};

export type GetKeystoneGroupsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneGroupsError = GetKeystoneGroupsErrors[keyof GetKeystoneGroupsErrors];

export type GetKeystoneGroupsResponses = {
    /**
     * get keystone groups
     */
    200: KeystoneGroupsResponse;
};

export type GetKeystoneGroupsResponse = GetKeystoneGroupsResponses[keyof GetKeystoneGroupsResponses];

export type GetKeystoneGroupByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone group to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/groups/{id}';
};

export type GetKeystoneGroupByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneGroupByIdError = GetKeystoneGroupByIdErrors[keyof GetKeystoneGroupByIdErrors];

export type GetKeystoneGroupByIdResponses = {
    /**
     * keystone group response
     */
    200: KeystoneGroupResponse;
};

export type GetKeystoneGroupByIdResponse = GetKeystoneGroupByIdResponses[keyof GetKeystoneGroupByIdResponses];

export type GetKeystoneRolesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a role name
         */
        name?: string;
    };
    url: '/keystone/v3/roles';
};

export type GetKeystoneRolesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneRolesError = GetKeystoneRolesErrors[keyof GetKeystoneRolesErrors];

export type GetKeystoneRolesResponses = {
    /**
     * get keystone roles
     */
    200: KeystoneRolesResponse;
};

export type GetKeystoneRolesResponse = GetKeystoneRolesResponses[keyof GetKeystoneRolesResponses];

export type CreateKeystoneRoleData = {
    body: CreateKeystoneRoleInput;
    path?: never;
    query?: never;
    url: '/keystone/v3/roles';
};

export type CreateKeystoneRoleErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneRoleError = CreateKeystoneRoleErrors[keyof CreateKeystoneRoleErrors];

export type CreateKeystoneRoleResponses = {
    /**
     * keystone role response
     */
    200: KeystoneRoleResponse;
};

export type CreateKeystoneRoleResponse = CreateKeystoneRoleResponses[keyof CreateKeystoneRoleResponses];

export type DeleteKeystoneRoleByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone role to delete
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/roles/{id}';
};

export type DeleteKeystoneRoleByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteKeystoneRoleByIdError = DeleteKeystoneRoleByIdErrors[keyof DeleteKeystoneRoleByIdErrors];

export type DeleteKeystoneRoleByIdResponses = {
    /**
     * role deleted
     */
    204: void;
};

export type DeleteKeystoneRoleByIdResponse = DeleteKeystoneRoleByIdResponses[keyof DeleteKeystoneRoleByIdResponses];

export type GetKeystoneRoleByIdData = {
    body?: never;
    path: {
        /**
         * ID of keystone role to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/roles/{id}';
};

export type GetKeystoneRoleByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneRoleByIdError = GetKeystoneRoleByIdErrors[keyof GetKeystoneRoleByIdErrors];

export type GetKeystoneRoleByIdResponses = {
    /**
     * keystone role response
     */
    200: KeystoneRoleResponse;
};

export type GetKeystoneRoleByIdResponse = GetKeystoneRoleByIdResponses[keyof GetKeystoneRoleByIdResponses];

export type UpdateKeystoneRoleByIdData = {
    body: UpdateKeystoneRoleInput;
    path: {
        /**
         * ID of keystone role to fetch
         */
        id: string;
    };
    query?: never;
    url: '/keystone/v3/roles/{id}';
};

export type UpdateKeystoneRoleByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdateKeystoneRoleByIdError = UpdateKeystoneRoleByIdErrors[keyof UpdateKeystoneRoleByIdErrors];

export type UpdateKeystoneRoleByIdResponses = {
    /**
     * keystone role response
     */
    200: KeystoneRoleResponse;
};

export type UpdateKeystoneRoleByIdResponse = UpdateKeystoneRoleByIdResponses[keyof UpdateKeystoneRoleByIdResponses];

export type GetKeystoneRoleAssignmentsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filters the response by a role id
         */
        'role.id'?: string;
        /**
         * Filters the response by a user id
         */
        'user.id'?: string;
        /**
         * Filters the response by a domain id
         */
        'scope.domain.id'?: string;
        /**
         * Filters the response by a role assignment id
         */
        'scope.project.id'?: string;
    };
    url: '/keystone/v3/role_assignments';
};

export type GetKeystoneRoleAssignmentsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetKeystoneRoleAssignmentsError = GetKeystoneRoleAssignmentsErrors[keyof GetKeystoneRoleAssignmentsErrors];

export type GetKeystoneRoleAssignmentsResponses = {
    /**
     * get keystone role assignments
     */
    200: KeystoneRoleAssignmentsResponse;
};

export type GetKeystoneRoleAssignmentsResponse = GetKeystoneRoleAssignmentsResponses[keyof GetKeystoneRoleAssignmentsResponses];

export type CreateKeystoneApplicationCredentialData = {
    body: CreateKeystoneApplicationCredentialInput;
    path: {
        /**
         * ID of keystone user to fetch
         */
        user_id: string;
    };
    query?: never;
    url: '/keystone/v3/users/{user_id}/application_credentials';
};

export type CreateKeystoneApplicationCredentialErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateKeystoneApplicationCredentialError = CreateKeystoneApplicationCredentialErrors[keyof CreateKeystoneApplicationCredentialErrors];

export type CreateKeystoneApplicationCredentialResponses = {
    /**
     * keystone project response
     */
    200: KeystoneApplicationCredentialResponse;
};

export type CreateKeystoneApplicationCredentialResponse = CreateKeystoneApplicationCredentialResponses[keyof CreateKeystoneApplicationCredentialResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1' | (string & {});
};