// This file is auto-generated by @hey-api/openapi-ts

export type _Error = {
    /**
     * Error code
     */
    code: number;
    /**
     * Error message
     */
    message: string;
};

export type GlanceVersionLink = {
    href: string;
    rel: string;
};

export type GlanceVersion = {
    id: string;
    status: string;
    links: Array<GlanceVersionLink>;
};

export type GlanceVersionResponse = {
    versions: Array<GlanceVersion>;
};

export type GlanceImage = {
    'owner_specified.openstack.object'?: string;
    'owner_specified.openstack.sha256'?: string;
    'owner_specified.openstack.md5'?: string;
    name?: string;
    disk_format?: string;
    container_format?: string;
    visibility?: 'public' | 'private';
    size?: number;
    virtual_size?: number;
    status?: 'active' | 'saving' | 'queued' | 'killed';
    checksum?: string;
    protected?: boolean;
    min_ram?: number;
    min_disk?: number;
    owner?: string;
    os_hidden?: boolean;
    os_hash_algo?: string;
    os_hash_value?: string;
    id?: string;
    created_at?: string;
    updated_at?: string;
    tags?: Array<string>;
    self?: string;
    file?: string;
    schema?: string;
    stores?: string;
};

export type GlanceImagesResponse = {
    images?: Array<GlanceImage>;
    first?: string;
    schema?: string;
};

export type GlanceImageResponse = {
    image?: GlanceImage;
};

export type NovaVersionLink = {
    href: string;
    type: string;
    rel: string;
};

export type NovaVersion = {
    id: string;
    status: string;
    version: string;
    min_version: string;
    updated: string;
    links: Array<NovaVersionLink>;
};

export type NovaVersionResponse = {
    version: NovaVersion;
};

export type NeutronNetwork = {
    id?: string;
    name?: string;
    tenant_id?: string;
    admin_state_up?: boolean;
    mtu?: number;
    status?: string;
    subnets?: Array<string>;
    shared?: boolean;
    availability_zone_hints?: Array<string>;
    availability_zones?: Array<string>;
    ipv4_address_scope?: string | null;
    ipv6_address_scope?: string | null;
    'router:external'?: boolean;
    description?: string;
    tags?: Array<string>;
    created_at?: string;
    updated_at?: string;
    revision_number?: number;
    project_id?: string;
    'provider:network_type'?: string;
    'provider:physical_network'?: string | null;
    'provider:segmentation_id'?: number | null;
};

export type NeutronNetworksResponse = {
    networks?: Array<NeutronNetwork>;
};

export type CreateServerRequest = {
    server?: {
        networks: Array<{
            uuid?: string;
        }>;
        min_count: number;
        max_count: number;
        flavorRef: string;
        block_device_mapping_v2: Array<{
            uuid?: string;
            boot_index?: number;
            source_type?: string;
            destination_type?: string;
            delete_on_termination?: boolean;
        }>;
        name: string;
        imageRef: string;
    };
};

export type NovaServerResponse = {
    server?: {
        id?: string;
        links?: Array<{
            rel?: string;
            href?: string;
        }>;
        'OS-DCF:diskConfig'?: string;
        security_groups?: Array<{
            name?: string;
        }>;
        adminPass?: string;
    };
};

export type NeutronNetworkResponse = {
    network?: NeutronNetwork;
};

export type ActionServerRequest = {
    'os-stop'?: {
        [key: string]: unknown;
    } | null;
    'os-start'?: {
        [key: string]: unknown;
    } | null;
};

export type NovaServersDetailResponse = {
    servers?: Array<{
        id?: string;
        name?: string;
        status?: string;
        tenant_id?: string;
        user_id?: string;
        metadata?: {
            [key: string]: string;
        };
        hostId?: string;
        image?: {
            id?: string;
            links?: Array<{
                rel?: string;
                href?: string;
            }>;
        };
        flavor?: {
            vcpus?: number;
            ram?: number;
            disk?: number;
            ephemeral?: number;
            swap?: number;
            original_name?: string;
            extra_specs?: {
                [key: string]: string;
            };
        };
        created?: string;
        updated?: string;
        addresses?: {
            [key: string]: Array<{
                addr?: string;
                type?: string;
            }>;
        };
        accessIPv4?: string;
        accessIPv6?: string;
        links?: Array<{
            rel?: string;
            href?: string;
        }>;
        'OS-DCF:diskConfig'?: string;
        'OS-EXT-AZ:availability_zone'?: string;
        pinned_availability_zone?: string | null;
        config_drive?: string;
        key_name?: string | null;
        'OS-SRV-USG:launched_at'?: string | null;
        'OS-SRV-USG:terminated_at'?: string | null;
        'OS-EXT-SRV-ATTR:host'?: string | null;
        'OS-EXT-SRV-ATTR:instance_name'?: string;
        'OS-EXT-SRV-ATTR:hypervisor_hostname'?: string | null;
        'OS-EXT-SRV-ATTR:reservation_id'?: string;
        'OS-EXT-SRV-ATTR:launch_index'?: number;
        'OS-EXT-SRV-ATTR:hostname'?: string;
        'OS-EXT-SRV-ATTR:kernel_id'?: string;
        'OS-EXT-SRV-ATTR:ramdisk_id'?: string;
        'OS-EXT-SRV-ATTR:root_device_name'?: string | null;
        'OS-EXT-SRV-ATTR:user_data'?: string | null;
        'OS-EXT-STS:task_state'?: string | null;
        'OS-EXT-STS:vm_state'?: string;
        'OS-EXT-STS:power_state'?: number;
        'os-extended-volumes:volumes_attached'?: Array<{
            [key: string]: unknown;
        }>;
        locked?: boolean;
        locked_reason?: string | null;
        description?: string | null;
        tags?: Array<string>;
        trusted_image_certificates?: Array<string> | null;
        host_status?: string;
    }>;
};

export type NovaFlavorDetail = {
    id?: string;
    name?: string;
    ram?: number;
    disk?: number;
    swap?: string;
    'OS-FLV-EXT-DATA:ephemeral'?: number;
    'OS-FLV-DISABLED:disabled'?: boolean;
    vcpus?: number;
    'os-flavor-access:is_public'?: boolean;
    rxtx_factor?: number;
    links?: Array<{
        rel?: string;
        href?: string;
    }>;
    description?: string | null;
    extra_specs?: {
        [key: string]: string;
    };
};

export type NovaFlavorsDetailResponse = {
    flavors?: Array<NovaFlavorDetail>;
};

export type NovaFlavorResponse = {
    flavor?: NovaFlavorDetail;
};

export type NeutronVersionLink = {
    href: string;
    rel: string;
};

export type NeutronVersion = {
    id: string;
    status: string;
    links: Array<NeutronVersionLink>;
};

export type NeutronVersionResponse = {
    versions: Array<NeutronVersion>;
};

export type NeutronSubnet = {
    id?: string;
    name?: string;
    tenant_id?: string;
    admin_state_up?: boolean;
    mtu?: number;
    status?: string;
    subnets?: Array<string>;
    shared?: boolean;
    availability_zone_hints?: Array<string>;
    availability_zones?: Array<string>;
    ipv4_address_scope?: string | null;
    ipv6_address_scope?: string | null;
    'router:external'?: boolean;
    description?: string;
    tags?: Array<string>;
    created_at?: string;
    updated_at?: string;
    revision_number?: number;
    project_id?: string;
    'provider:network_type'?: string;
    'provider:physical_network'?: string | null;
    'provider:segmentation_id'?: number | null;
};

export type NeutronSubnetsResponse = {
    networks?: Array<NeutronSubnet>;
};

export type NeutronSubnetResponse = {
    network?: NeutronSubnet;
};

export type PlacementVersionLink = {
    href: string;
    rel: string;
};

export type PlacementVersion = {
    id: string;
    max_version: string;
    min_version: string;
    status: string;
    links: Array<PlacementVersionLink>;
};

export type PlacementVersionResponse = {
    versions: Array<PlacementVersion>;
};

export type GetGlanceVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/glance/v2';
};

export type GetGlanceVersionErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetGlanceVersionError = GetGlanceVersionErrors[keyof GetGlanceVersionErrors];

export type GetGlanceVersionResponses = {
    /**
     * glance version
     */
    200: GlanceVersionResponse;
};

export type GetGlanceVersionResponse = GetGlanceVersionResponses[keyof GetGlanceVersionResponses];

export type GetGlanceImagesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/glance/v2/images';
};

export type GetGlanceImagesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetGlanceImagesError = GetGlanceImagesErrors[keyof GetGlanceImagesErrors];

export type GetGlanceImagesResponses = {
    /**
     * get glance images
     */
    200: GlanceImagesResponse;
};

export type GetGlanceImagesResponse = GetGlanceImagesResponses[keyof GetGlanceImagesResponses];

export type CreateGlanceImageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/glance/v2/images';
};

export type CreateGlanceImageErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateGlanceImageError = CreateGlanceImageErrors[keyof CreateGlanceImageErrors];

export type CreateGlanceImageResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type CreateGlanceImageResponse = CreateGlanceImageResponses[keyof CreateGlanceImageResponses];

export type DeleteGlanceImageByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to delete
         */
        id: string;
    };
    query?: never;
    url: '/glance/v2/images/{id}';
};

export type DeleteGlanceImageByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteGlanceImageByIdError = DeleteGlanceImageByIdErrors[keyof DeleteGlanceImageByIdErrors];

export type DeleteGlanceImageByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeleteGlanceImageByIdResponse = DeleteGlanceImageByIdResponses[keyof DeleteGlanceImageByIdResponses];

export type GetGlanceImageByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/glance/v2/images/{id}';
};

export type GetGlanceImageByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetGlanceImageByIdError = GetGlanceImageByIdErrors[keyof GetGlanceImageByIdErrors];

export type GetGlanceImageByIdResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetGlanceImageByIdResponse = GetGlanceImageByIdResponses[keyof GetGlanceImageByIdResponses];

export type GetGlanceImageFileByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/glance/v2/images/{id}/file';
};

export type GetGlanceImageFileByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetGlanceImageFileByIdError = GetGlanceImageFileByIdErrors[keyof GetGlanceImageFileByIdErrors];

export type GetGlanceImageFileByIdResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetGlanceImageFileByIdResponse = GetGlanceImageFileByIdResponses[keyof GetGlanceImageFileByIdResponses];

export type UploadGlanceImageFileData = {
    body?: never;
    path: {
        /**
         * ID of glance image to upload
         */
        id: string;
    };
    query?: never;
    url: '/glance/v2/images/{id}/file';
};

export type UploadGlanceImageFileErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UploadGlanceImageFileError = UploadGlanceImageFileErrors[keyof UploadGlanceImageFileErrors];

export type UploadGlanceImageFileResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type UploadGlanceImageFileResponse = UploadGlanceImageFileResponses[keyof UploadGlanceImageFileResponses];

export type GetGlanceSchemasImageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/glance/v2/schemas/image';
};

export type GetGlanceSchemasImageErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetGlanceSchemasImageError = GetGlanceSchemasImageErrors[keyof GetGlanceSchemasImageErrors];

export type GetGlanceSchemasImageResponses = {
    /**
     * get glance images
     */
    200: GlanceImagesResponse;
};

export type GetGlanceSchemasImageResponse = GetGlanceSchemasImageResponses[keyof GetGlanceSchemasImageResponses];

export type GetNovaVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/nova/v2.1';
};

export type GetNovaVersionErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaVersionError = GetNovaVersionErrors[keyof GetNovaVersionErrors];

export type GetNovaVersionResponses = {
    /**
     * nova version
     */
    200: NovaVersionResponse;
};

export type GetNovaVersionResponse = GetNovaVersionResponses[keyof GetNovaVersionResponses];

export type GetNovaServicesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/nova/v2.1/os-services';
};

export type GetNovaServicesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaServicesError = GetNovaServicesErrors[keyof GetNovaServicesErrors];

export type GetNovaServicesResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetNovaServicesResponse = GetNovaServicesResponses[keyof GetNovaServicesResponses];

export type CreateNovaServerData = {
    body: CreateServerRequest;
    path?: never;
    query?: never;
    url: '/nova/v2.1/servers';
};

export type CreateNovaServerErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNovaServerError = CreateNovaServerErrors[keyof CreateNovaServerErrors];

export type CreateNovaServerResponses = {
    /**
     * nova server
     */
    200: NovaServerResponse;
};

export type CreateNovaServerResponse = CreateNovaServerResponses[keyof CreateNovaServerResponses];

export type DeleteNovaServerByIdData = {
    body?: never;
    path: {
        /**
         * ID of nova server to delete
         */
        id: string;
    };
    query?: never;
    url: '/nova/v2.1/servers/{id}';
};

export type DeleteNovaServerByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteNovaServerByIdError = DeleteNovaServerByIdErrors[keyof DeleteNovaServerByIdErrors];

export type DeleteNovaServerByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeleteNovaServerByIdResponse = DeleteNovaServerByIdResponses[keyof DeleteNovaServerByIdResponses];

export type GetNovaServerByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/nova/v2.1/servers/{id}';
};

export type GetNovaServerByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaServerByIdError = GetNovaServerByIdErrors[keyof GetNovaServerByIdErrors];

export type GetNovaServerByIdResponses = {
    /**
     * neutron network response
     */
    200: NeutronNetworkResponse;
};

export type GetNovaServerByIdResponse = GetNovaServerByIdResponses[keyof GetNovaServerByIdResponses];

export type ActionNovaServerData = {
    body: ActionServerRequest;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/nova/v2.1/servers/{id}/action';
};

export type ActionNovaServerErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type ActionNovaServerError = ActionNovaServerErrors[keyof ActionNovaServerErrors];

export type ActionNovaServerResponses = {
    /**
     * neutron network response
     */
    200: NeutronNetworkResponse;
};

export type ActionNovaServerResponse = ActionNovaServerResponses[keyof ActionNovaServerResponses];

export type GetNovaServersDetailData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Filter by flavor ID or name.
         */
        flavor?: string | null;
        /**
         * Filter by image ID or name.
         */
        image?: string | null;
        /**
         * Filter by server name.
         */
        name?: string | null;
        /**
         * Filter by project ID.
         */
        project_id?: string | null;
        /**
         * Filter by reservation ID.
         */
        reservation_id?: string | null;
        /**
         * Filter by server status (e.g., ACTIVE, SHUTOFF).
         */
        status?: string | null;
        /**
         * Filter by user ID.
         */
        user_id?: string | null;
        /**
         * Filter by deleted status. Use `false` to exclude deleted servers.
         */
        deleted?: boolean;
        /**
         * Filter by host.
         */
        host?: string | null;
        /**
         * Filter by IPv4 address.
         */
        ip?: string | null;
        /**
         * Filter by IPv6 address.
         */
        ip6?: string | null;
        /**
         * Filter by changes since the specified time (ISO 8601 format).
         */
        'changes-since'?: string | null;
        /**
         * Filter by changes before the specified time (ISO 8601 format).
         */
        'changes-before'?: string | null;
    };
    url: '/nova/v2.1/servers/detail';
};

export type GetNovaServersDetailErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaServersDetailError = GetNovaServersDetailErrors[keyof GetNovaServersDetailErrors];

export type GetNovaServersDetailResponses = {
    /**
     * get nova servers
     */
    200: NovaServersDetailResponse;
};

export type GetNovaServersDetailResponse = GetNovaServersDetailResponses[keyof GetNovaServersDetailResponses];

export type CreateNovaFlavorData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/nova/v2.1/flavors';
};

export type CreateNovaFlavorErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNovaFlavorError = CreateNovaFlavorErrors[keyof CreateNovaFlavorErrors];

export type CreateNovaFlavorResponses = {
    /**
     * create nova flavors
     */
    200: NovaFlavorsDetailResponse;
};

export type CreateNovaFlavorResponse = CreateNovaFlavorResponses[keyof CreateNovaFlavorResponses];

export type GetNovaFlavorsDetailData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/nova/v2.1/flavors/detail';
};

export type GetNovaFlavorsDetailErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaFlavorsDetailError = GetNovaFlavorsDetailErrors[keyof GetNovaFlavorsDetailErrors];

export type GetNovaFlavorsDetailResponses = {
    /**
     * get nova flavors
     */
    200: NovaFlavorsDetailResponse;
};

export type GetNovaFlavorsDetailResponse = GetNovaFlavorsDetailResponses[keyof GetNovaFlavorsDetailResponses];

export type GetNovaFlavorByIdData = {
    body?: never;
    path: {
        /**
         * ID of nova flavor to fetch
         */
        id: string;
    };
    query?: never;
    url: '/nova/v2.1/flavors/{id}';
};

export type GetNovaFlavorByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNovaFlavorByIdError = GetNovaFlavorByIdErrors[keyof GetNovaFlavorByIdErrors];

export type GetNovaFlavorByIdResponses = {
    /**
     * nova flavor response
     */
    200: NovaFlavorResponse;
};

export type GetNovaFlavorByIdResponse = GetNovaFlavorByIdResponses[keyof GetNovaFlavorByIdResponses];

export type CreateNovaExternalEventsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/nova/v2.1/os-server-external-events';
};

export type CreateNovaExternalEventsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNovaExternalEventsError = CreateNovaExternalEventsErrors[keyof CreateNovaExternalEventsErrors];

export type CreateNovaExternalEventsResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type CreateNovaExternalEventsResponse = CreateNovaExternalEventsResponses[keyof CreateNovaExternalEventsResponses];

export type GetNeutronVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0';
};

export type GetNeutronVersionErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronVersionError = GetNeutronVersionErrors[keyof GetNeutronVersionErrors];

export type GetNeutronVersionResponses = {
    /**
     * neutron version
     */
    200: NeutronVersionResponse;
};

export type GetNeutronVersionResponse = GetNeutronVersionResponses[keyof GetNeutronVersionResponses];

export type GetNeutronNetworksData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/networks';
};

export type GetNeutronNetworksErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronNetworksError = GetNeutronNetworksErrors[keyof GetNeutronNetworksErrors];

export type GetNeutronNetworksResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetNeutronNetworksResponse = GetNeutronNetworksResponses[keyof GetNeutronNetworksResponses];

export type CreateNeutronNetworkData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/networks';
};

export type CreateNeutronNetworkErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNeutronNetworkError = CreateNeutronNetworkErrors[keyof CreateNeutronNetworkErrors];

export type CreateNeutronNetworkResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type CreateNeutronNetworkResponse = CreateNeutronNetworkResponses[keyof CreateNeutronNetworkResponses];

export type DeleteNeutronNetworkByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/networks/{id}';
};

export type DeleteNeutronNetworkByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteNeutronNetworkByIdError = DeleteNeutronNetworkByIdErrors[keyof DeleteNeutronNetworkByIdErrors];

export type DeleteNeutronNetworkByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeleteNeutronNetworkByIdResponse = DeleteNeutronNetworkByIdResponses[keyof DeleteNeutronNetworkByIdResponses];

export type GetNeutronNetworkByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/networks/{id}';
};

export type GetNeutronNetworkByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronNetworkByIdError = GetNeutronNetworkByIdErrors[keyof GetNeutronNetworkByIdErrors];

export type GetNeutronNetworkByIdResponses = {
    /**
     * neutron network response
     */
    200: NeutronNetworkResponse;
};

export type GetNeutronNetworkByIdResponse = GetNeutronNetworkByIdResponses[keyof GetNeutronNetworkByIdResponses];

export type GetNeutronSubnetsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/subnets';
};

export type GetNeutronSubnetsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronSubnetsError = GetNeutronSubnetsErrors[keyof GetNeutronSubnetsErrors];

export type GetNeutronSubnetsResponses = {
    /**
     * A detailed list of subnets.
     */
    200: NeutronSubnetsResponse;
};

export type GetNeutronSubnetsResponse = GetNeutronSubnetsResponses[keyof GetNeutronSubnetsResponses];

export type CreateNeutronSubnetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/subnets';
};

export type CreateNeutronSubnetErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNeutronSubnetError = CreateNeutronSubnetErrors[keyof CreateNeutronSubnetErrors];

export type CreateNeutronSubnetResponses = {
    /**
     * A detailed list of subnets.
     */
    200: NeutronSubnetsResponse;
};

export type CreateNeutronSubnetResponse = CreateNeutronSubnetResponses[keyof CreateNeutronSubnetResponses];

export type DeleteNeutronSubnetByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/subnets/{id}';
};

export type DeleteNeutronSubnetByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteNeutronSubnetByIdError = DeleteNeutronSubnetByIdErrors[keyof DeleteNeutronSubnetByIdErrors];

export type DeleteNeutronSubnetByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeleteNeutronSubnetByIdResponse = DeleteNeutronSubnetByIdResponses[keyof DeleteNeutronSubnetByIdResponses];

export type GetNeutronSubnetByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/subnets/{id}';
};

export type GetNeutronSubnetByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronSubnetByIdError = GetNeutronSubnetByIdErrors[keyof GetNeutronSubnetByIdErrors];

export type GetNeutronSubnetByIdResponses = {
    /**
     * neutron subnet response
     */
    200: NeutronSubnetResponse;
};

export type GetNeutronSubnetByIdResponse = GetNeutronSubnetByIdResponses[keyof GetNeutronSubnetByIdResponses];

export type GetNeutronQuotasByProjectIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        project_id: string;
    };
    query?: never;
    url: '/neutron/v2.0/quotas/{project_id}';
};

export type GetNeutronQuotasByProjectIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronQuotasByProjectIdError = GetNeutronQuotasByProjectIdErrors[keyof GetNeutronQuotasByProjectIdErrors];

export type GetNeutronQuotasByProjectIdResponses = {
    /**
     * neutron network response
     */
    200: NeutronNetworkResponse;
};

export type GetNeutronQuotasByProjectIdResponse = GetNeutronQuotasByProjectIdResponses[keyof GetNeutronQuotasByProjectIdResponses];

export type GetNeutronAgentsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * ID of glance image to fetch
         */
        tenant_id?: string;
        /**
         * Fields to be returned
         */
        fields?: Array<string>;
    };
    url: '/neutron/v2.0/agents';
};

export type GetNeutronAgentsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronAgentsError = GetNeutronAgentsErrors[keyof GetNeutronAgentsErrors];

export type GetNeutronAgentsResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetNeutronAgentsResponse = GetNeutronAgentsResponses[keyof GetNeutronAgentsResponses];

export type GetNeutronPortsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * ID of glance image to fetch
         */
        tenant_id?: string;
        /**
         * Fields to be returned
         */
        fields?: Array<string>;
    };
    url: '/neutron/v2.0/ports';
};

export type GetNeutronPortsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronPortsError = GetNeutronPortsErrors[keyof GetNeutronPortsErrors];

export type GetNeutronPortsResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetNeutronPortsResponse = GetNeutronPortsResponses[keyof GetNeutronPortsResponses];

export type CreateNeutronPortData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/ports';
};

export type CreateNeutronPortErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreateNeutronPortError = CreateNeutronPortErrors[keyof CreateNeutronPortErrors];

export type CreateNeutronPortResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type CreateNeutronPortResponse = CreateNeutronPortResponses[keyof CreateNeutronPortResponses];

export type DeleteNeutronPortByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to delete
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/ports/{id}';
};

export type DeleteNeutronPortByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeleteNeutronPortByIdError = DeleteNeutronPortByIdErrors[keyof DeleteNeutronPortByIdErrors];

export type DeleteNeutronPortByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeleteNeutronPortByIdResponse = DeleteNeutronPortByIdResponses[keyof DeleteNeutronPortByIdResponses];

export type GetNeutronPortByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/ports/{id}';
};

export type GetNeutronPortByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronPortByIdError = GetNeutronPortByIdErrors[keyof GetNeutronPortByIdErrors];

export type GetNeutronPortByIdResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetNeutronPortByIdResponse = GetNeutronPortByIdResponses[keyof GetNeutronPortByIdResponses];

export type UpdateNeutronPortByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/neutron/v2.0/ports/{id}';
};

export type UpdateNeutronPortByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdateNeutronPortByIdError = UpdateNeutronPortByIdErrors[keyof UpdateNeutronPortByIdErrors];

export type UpdateNeutronPortByIdResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type UpdateNeutronPortByIdResponse = UpdateNeutronPortByIdResponses[keyof UpdateNeutronPortByIdResponses];

export type GetNeutronSecurityGroupsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/security-groups';
};

export type GetNeutronSecurityGroupsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronSecurityGroupsError = GetNeutronSecurityGroupsErrors[keyof GetNeutronSecurityGroupsErrors];

export type GetNeutronSecurityGroupsResponses = {
    /**
     * get glance images
     */
    200: GlanceImagesResponse;
};

export type GetNeutronSecurityGroupsResponse = GetNeutronSecurityGroupsResponses[keyof GetNeutronSecurityGroupsResponses];

export type GetNeutronExtensionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/neutron/v2.0/extensions';
};

export type GetNeutronExtensionsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetNeutronExtensionsError = GetNeutronExtensionsErrors[keyof GetNeutronExtensionsErrors];

export type GetNeutronExtensionsResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetNeutronExtensionsResponse = GetNeutronExtensionsResponses[keyof GetNeutronExtensionsResponses];

export type GetPlacementVersionData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/placement';
};

export type GetPlacementVersionErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementVersionError = GetPlacementVersionErrors[keyof GetPlacementVersionErrors];

export type GetPlacementVersionResponses = {
    /**
     * placement version
     */
    200: PlacementVersionResponse;
};

export type GetPlacementVersionResponse = GetPlacementVersionResponses[keyof GetPlacementVersionResponses];

export type GetPlacementVersion2Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/placement/';
};

export type GetPlacementVersion2Errors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementVersion2Error = GetPlacementVersion2Errors[keyof GetPlacementVersion2Errors];

export type GetPlacementVersion2Responses = {
    /**
     * placement version
     */
    200: PlacementVersionResponse;
};

export type GetPlacementVersion2Response = GetPlacementVersion2Responses[keyof GetPlacementVersion2Responses];

export type GetPlacementTraitsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/placement/traits';
};

export type GetPlacementTraitsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementTraitsError = GetPlacementTraitsErrors[keyof GetPlacementTraitsErrors];

export type GetPlacementTraitsResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetPlacementTraitsResponse = GetPlacementTraitsResponses[keyof GetPlacementTraitsResponses];

export type GetPlacementResourceProvidersData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * ID of glance image to fetch
         */
        in_tree?: string;
    };
    url: '/placement/resource_providers';
};

export type GetPlacementResourceProvidersErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementResourceProvidersError = GetPlacementResourceProvidersErrors[keyof GetPlacementResourceProvidersErrors];

export type GetPlacementResourceProvidersResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetPlacementResourceProvidersResponse = GetPlacementResourceProvidersResponses[keyof GetPlacementResourceProvidersResponses];

export type CreatePlacementResourceProviderData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/placement/resource_providers';
};

export type CreatePlacementResourceProviderErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type CreatePlacementResourceProviderError = CreatePlacementResourceProviderErrors[keyof CreatePlacementResourceProviderErrors];

export type CreatePlacementResourceProviderResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type CreatePlacementResourceProviderResponse = CreatePlacementResourceProviderResponses[keyof CreatePlacementResourceProviderResponses];

export type GetPlacementResourceProviderAllocationsData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/allocations';
};

export type GetPlacementResourceProviderAllocationsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementResourceProviderAllocationsError = GetPlacementResourceProviderAllocationsErrors[keyof GetPlacementResourceProviderAllocationsErrors];

export type GetPlacementResourceProviderAllocationsResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetPlacementResourceProviderAllocationsResponse = GetPlacementResourceProviderAllocationsResponses[keyof GetPlacementResourceProviderAllocationsResponses];

export type GetPlacementResourceProviderInventoriesData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/inventories';
};

export type GetPlacementResourceProviderInventoriesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementResourceProviderInventoriesError = GetPlacementResourceProviderInventoriesErrors[keyof GetPlacementResourceProviderInventoriesErrors];

export type GetPlacementResourceProviderInventoriesResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetPlacementResourceProviderInventoriesResponse = GetPlacementResourceProviderInventoriesResponses[keyof GetPlacementResourceProviderInventoriesResponses];

export type UpdatePlacementResourceProviderInventoryData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/inventories';
};

export type UpdatePlacementResourceProviderInventoryErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdatePlacementResourceProviderInventoryError = UpdatePlacementResourceProviderInventoryErrors[keyof UpdatePlacementResourceProviderInventoryErrors];

export type UpdatePlacementResourceProviderInventoryResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type UpdatePlacementResourceProviderInventoryResponse = UpdatePlacementResourceProviderInventoryResponses[keyof UpdatePlacementResourceProviderInventoryResponses];

export type GetPlacementResourceProviderAggregatesData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/aggregates';
};

export type GetPlacementResourceProviderAggregatesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementResourceProviderAggregatesError = GetPlacementResourceProviderAggregatesErrors[keyof GetPlacementResourceProviderAggregatesErrors];

export type GetPlacementResourceProviderAggregatesResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetPlacementResourceProviderAggregatesResponse = GetPlacementResourceProviderAggregatesResponses[keyof GetPlacementResourceProviderAggregatesResponses];

export type GetPlacementResourceProviderTraitsData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/traits';
};

export type GetPlacementResourceProviderTraitsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementResourceProviderTraitsError = GetPlacementResourceProviderTraitsErrors[keyof GetPlacementResourceProviderTraitsErrors];

export type GetPlacementResourceProviderTraitsResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type GetPlacementResourceProviderTraitsResponse = GetPlacementResourceProviderTraitsResponses[keyof GetPlacementResourceProviderTraitsResponses];

export type UpdatePlacementResourceProviderTraitsData = {
    body?: never;
    path: {
        /**
         * ID of glance image to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/resource_providers/{id}/traits';
};

export type UpdatePlacementResourceProviderTraitsErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdatePlacementResourceProviderTraitsError = UpdatePlacementResourceProviderTraitsErrors[keyof UpdatePlacementResourceProviderTraitsErrors];

export type UpdatePlacementResourceProviderTraitsResponses = {
    /**
     * glance image response
     */
    200: GlanceImageResponse;
};

export type UpdatePlacementResourceProviderTraitsResponse = UpdatePlacementResourceProviderTraitsResponses[keyof UpdatePlacementResourceProviderTraitsResponses];

export type DeletePlacementAllocationByIdData = {
    body?: never;
    path: {
        /**
         * ID of placement allocation to delete
         */
        id: string;
    };
    query?: never;
    url: '/placement/allocations/{id}';
};

export type DeletePlacementAllocationByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type DeletePlacementAllocationByIdError = DeletePlacementAllocationByIdErrors[keyof DeletePlacementAllocationByIdErrors];

export type DeletePlacementAllocationByIdResponses = {
    /**
     * image deleted
     */
    204: void;
};

export type DeletePlacementAllocationByIdResponse = DeletePlacementAllocationByIdResponses[keyof DeletePlacementAllocationByIdResponses];

export type GetPlacementAllocationByIdData = {
    body?: never;
    path: {
        /**
         * ID of glance allocation to fetch
         */
        id: string;
    };
    query?: never;
    url: '/placement/allocations/{id}';
};

export type GetPlacementAllocationByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementAllocationByIdError = GetPlacementAllocationByIdErrors[keyof GetPlacementAllocationByIdErrors];

export type GetPlacementAllocationByIdResponses = {
    /**
     * glance allocation response
     */
    200: NeutronNetworksResponse;
};

export type GetPlacementAllocationByIdResponse = GetPlacementAllocationByIdResponses[keyof GetPlacementAllocationByIdResponses];

export type UpdatePlacementAllocationByIdData = {
    body: CreateServerRequest;
    path: {
        /**
         * ID of placement allocation to delete
         */
        id: string;
    };
    query?: never;
    url: '/placement/allocations/{id}';
};

export type UpdatePlacementAllocationByIdErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type UpdatePlacementAllocationByIdError = UpdatePlacementAllocationByIdErrors[keyof UpdatePlacementAllocationByIdErrors];

export type UpdatePlacementAllocationByIdResponses = {
    /**
     * nova server
     */
    200: NovaServerResponse;
};

export type UpdatePlacementAllocationByIdResponse = UpdatePlacementAllocationByIdResponses[keyof UpdatePlacementAllocationByIdResponses];

export type GetPlacementAllocationCandidatesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/placement/allocation_candidates';
};

export type GetPlacementAllocationCandidatesErrors = {
    /**
     * unexpected error
     */
    '4XX': _Error;
    /**
     * unexpected error
     */
    default: _Error;
};

export type GetPlacementAllocationCandidatesError = GetPlacementAllocationCandidatesErrors[keyof GetPlacementAllocationCandidatesErrors];

export type GetPlacementAllocationCandidatesResponses = {
    /**
     * A detailed list of networks.
     */
    200: NeutronNetworksResponse;
};

export type GetPlacementAllocationCandidatesResponse = GetPlacementAllocationCandidatesResponses[keyof GetPlacementAllocationCandidatesResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1' | (string & {});
};